{"remainingRequest":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/IdeaProjects/collectedonnee/src/views/app/components/formadress.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/src/views/app/components/formadress.vue","mtime":1659178749147},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgeyByZXF1aXJlZCwgbWluTGVuZ3RoIH0gZnJvbSAidnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ImZvcm1zZXR0bGVtZW50IiwKICAgIHByb3BzOnsKICAgICAgICBjbGllbnRzOkFycmF5LAogICAgICAgIGlkOlN0cmluZywKICAgICAgICB0aXRsZTpTdHJpbmcsCiAgICAgICAgdHlwZTpTdHJpbmcsCiAgICAgICAgc3RhdHV0OkJvb2xlYW4KICAgIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHN1Ym1pdFN0YXR1czogbnVsbCwKICAgICAgICAgICAgbm9tOiAnJywKICAgICAgICAgICAgY2xpZW50OicnLAogICAgICAgICAgICBzdGF0dXM6IGZhbHNlLAogICAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgICAgY291bnRyeXM6WyJBZmdoYW5pc3RhbiIsIkNhbWVyb3VuIl0sCiAgICAgICAgICAgIHRvd25zOlsiRG91YWxhIiwiWWFvdW5kZSJdCiAgICAgICAgfQogICAgfSwKICAgIHZhbGlkYXRpb25zOiB7CiAgICAgICAgbm9tOiB7CiAgICAgICAgICAgIHJlcXVpcmVkLAogICAgICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCg0KQogICAgICAgIH0KICAgIH0sCgogICAgbWV0aG9kczp7CiAgICAgICAgcmVnaXN0ZXJTZXR0bGVtZW50OiBmdW5jdGlvbihpdGVtKXsKCiAgICAgICAgICAgIGxldCB0ZXN0PXt9CiAgICAgICAgICAgIHRlc3QgPSB7IHZhcmlhbnQ6aXRlbSwgbm9tOiB0aGlzLm5vbSwKICAgICAgICAgICAgICAgIGNvbnRlbnQ6dGhpcy5jb250ZW50IH0KCiAgICAgICAgICAgIHRoaXMuc2hvdyA9ICF0aGlzLnNob3cKICAgICAgICAgICAgdGhpcy4kdi4kdG91Y2goKTsKCiAgICAgICAgICAgIGlmICh0aGlzLiR2LiRpbnZhbGlkKSB7CgogICAgICAgICAgICAgICAgdGhpcy5zdWJtaXRTdGF0dXMgPSAiRVJST1IiOwogICAgICAgICAgICAgICAgdGhpcy5zaG93ID0gIXRoaXMuc2hvdwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgLy8gZG8geW91ciBzdWJtaXQgbG9naWMgaGVyZQogICAgICAgICAgICAgICAgdGhpcy5zdWJtaXRTdGF0dXMgPSAiUEVORElORyI7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnN1Ym1pdFN0YXR1cyA9ICJPSyI7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgicmVnaXN0ZXJzZXR0bGVtZW50Iix0ZXN0KTsKICAgICAgICAgICAgICAgIH0sIDEwMDApOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLwogICAgICAgIH0sCgogICAgICAgIG1ha2VUb2FzdCh2YXJpYW50ID0gbnVsbCx0eXBlPSJpbmZvIikgewoKICAgICAgICAgICAgdGhpcy4kdG9hc3RlZC5zaG93KHZhcmlhbnQse3R5cGU6dHlwZX0pCiAgICAgICAgfSwKCiAgICAgICAgbWFrZVRvYXN0VHdvKHZhcmlhbnQgPSBudWxsKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgU3VibWl0dGVkJykKCiAgICAgICAgICAgIHRoaXMuJGJ2VG9hc3QudG9hc3QoIlN1Y2Nlc3NmdWxseSBTdWJtaXR0ZWQiLCB7CiAgICAgICAgICAgICAgICB0aXRsZTogYFZhcmlhbnQgJHt2YXJpYW50IHx8ICJkZWZhdWx0In1gLAogICAgICAgICAgICAgICAgdmFyaWFudDogdmFyaWFudCwKICAgICAgICAgICAgICAgIHNvbGlkOiB0cnVlCiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICB9Cn0K"},{"version":3,"sources":["formadress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"formadress.vue","sourceRoot":"src/views/app/components","sourcesContent":["<template>\n\n\n    <b-modal :id=\"id\" :title=\"title\" :show=\"statut\" size=\"xl\" hide-footer>\n\n        <!--<b-card\n                title=\"Card with overlay\"\n                :aria-hidden=\"show ? 'true' : null\"\n        >-->\n        <template #modal-header=\"{  }\">\n            <!-- Emulate built in modal header close button action -->\n            <h5>{{title}}</h5>\n        </template>\n\n\n        <template #default=\"{ hide }\">\n\n            <b-overlay :show=\"show\" rounded=\"sm\">\n\n                <b-form :aria-hidden=\"show ? 'true' : null\" @submit.prevent=\"registerSettlement(type)\">\n\n                    <b-form-group\n                            class=\"col-md-12 mb-30\"\n                            :label=\"$t('nom_label')\"\n                            label-for=\"input-1\"\n                    >\n\n                        <b-form-input\n\n                                v-model.trim=\"$v.nom.$model\"\n                                type=\"text\"\n                                :placeholder=\"$t('prooftag')\"\n                        ></b-form-input>\n                        <b-alert\n                                show\n                                variant=\"danger\"\n                                class=\"error col-md-12 mt-1\"\n                                v-if=\"!$v.nom.minLength\"\n                        >{{$t('validator_nom')}}\n                            {{ $v.nom.$params.minLength.min }} {{$t('letters')}}  .</b-alert\n                        >\n\n\n                    </b-form-group>\n\n                    <b-form-group\n                            class=\"col-md-12 mb-30\"\n                            :label=\"$t('clients')\"\n                            label-for=\"input-1\"\n                    >\n\n                        <b-form-select\n                                id=\"input-3\"\n                                v-model=\"client\"\n                                :options=\"clients\"\n                                required\n                        ></b-form-select>\n\n\n                    </b-form-group>\n\n                           <b-form-group\n                                    class=\"col-md-12 mb-30\"\n                                    :label=\"$t('pays')\"\n                                    label-for=\"input-1\"\n                            >\n\n                                <b-form-select\n                                        id=\"input-3\"\n                                        v-model=\"pays\"\n                                        :options=\"countrys\"\n                                        required\n                                ></b-form-select>\n\n                            </b-form-group>\n\n                           <b-form-group\n                                    class=\"col-md-12 mb-30\"\n                                    :label=\"$t('towns')\"\n                                    label-for=\"input-1\"\n                            >\n\n                                <b-form-select\n                                        id=\"input-3\"\n                                        v-model=\"town\"\n                                        :options=\"towns\"\n                                        required\n                                ></b-form-select>\n\n                            </b-form-group>\n\n\n                    <b-form-group\n                            class=\"col-md-12 mb-30\"\n                            :label=\"$t('rue')\"\n                            label-for=\"input-1\"\n                    >\n                        <b-form-input\n\n                                v-model=\"rue\"\n                                type=\"text\"\n                                :placeholder=\"$t('rue')\"\n                        ></b-form-input>\n\n                    </b-form-group>\n\n                    <p></p>\n\n                    <div style=\"text-align: right\">\n                        <b-button  @click=\"hide()\" variant=\"outline-danger\" style=\"margin-right: 15px\">{{$t('Annuler')}}</b-button>\n                        <b-button type=\"submit\" variant=\"outline-success rights\" style=\"position: relative;right: 0;margin-right: 10px;\">{{$t('Enregistrer')}}</b-button>\n                    </div>\n\n                    <p v-once class=\"typo__p\" v-if=\"submitStatus === 'OK'\">\n                        <!--{{ makeToast(\"success\",\"success\") }}-->\n                    </p>\n                    <p v-once class=\"typo__p\" v-if=\"submitStatus === 'ERROR'\">\n                        {{ makeToast(\"Erreur\",\"error\") }}\n                    </p>\n                    <div v-once class=\"typo__p\" v-if=\"submitStatus === 'PENDING'\">\n                        <div class=\"spinner sm spinner-primary mt-3\"></div>\n                    </div>\n\n                </b-form>\n            </b-overlay>\n        </template>\n\n    </b-modal>\n\n</template>\n\n<script>\n\n    import { required, minLength } from \"vuelidate/lib/validators\";\n\n    export default {\n        name:\"formsettlement\",\n        props:{\n            clients:Array,\n            id:String,\n            title:String,\n            type:String,\n            statut:Boolean\n        },\n        data() {\n            return {\n                submitStatus: null,\n                nom: '',\n                client:'',\n                status: false,\n                show: false,\n                countrys:[\"Afghanistan\",\"Cameroun\"],\n                towns:[\"Douala\",\"Yaounde\"]\n            }\n        },\n        validations: {\n            nom: {\n                required,\n                minLength: minLength(4)\n            }\n        },\n\n        methods:{\n            registerSettlement: function(item){\n\n                let test={}\n                test = { variant:item, nom: this.nom,\n                    content:this.content }\n\n                this.show = !this.show\n                this.$v.$touch();\n\n                if (this.$v.$invalid) {\n\n                    this.submitStatus = \"ERROR\";\n                    this.show = !this.show\n                } else {\n                    // do your submit logic here\n                    this.submitStatus = \"PENDING\";\n                    setTimeout(() => {\n                        this.submitStatus = \"OK\";\n                        this.$emit(\"registersettlement\",test);\n                    }, 1000);\n                }\n\n                //\n            },\n\n            makeToast(variant = null,type=\"info\") {\n\n                this.$toasted.show(variant,{type:type})\n            },\n\n            makeToastTwo(variant = null) {\n                console.log('Successfully Submitted')\n\n                this.$bvToast.toast(\"Successfully Submitted\", {\n                    title: `Variant ${variant || \"default\"}`,\n                    variant: variant,\n                    solid: true\n                });\n            },\n        }\n    }\n</script>"]}]}