{"remainingRequest":"C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\toolsmctc\\src\\containers\\layouts\\largeSidebar\\Sidebar.vue?vue&type=template&id=1bf99b28&scoped=true&","dependencies":[{"path":"C:\\wamp64\\www\\toolsmctc\\src\\containers\\layouts\\largeSidebar\\Sidebar.vue","mtime":1614094090862},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}