{"remainingRequest":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/IdeaProjects/collectedonnee/src/views/app/hopital/edit_dossierpatient.vue?vue&type=template&id=71b4db32&scoped=true&","dependencies":[{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/src/views/app/hopital/edit_dossierpatient.vue","mtime":1660315553059},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}