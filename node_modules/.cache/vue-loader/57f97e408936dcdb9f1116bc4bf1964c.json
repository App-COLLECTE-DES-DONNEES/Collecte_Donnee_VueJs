{"remainingRequest":"C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-languages-dropdown\\src\\LanguagesDropdown.vue?vue&type=style&index=0&id=6bd6d423&scoped=true&lang=css&","dependencies":[{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-languages-dropdown\\src\\LanguagesDropdown.vue","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAnLi9hc3NldHMvY3NzL3N0eWxlLmNzcyc7DQpAaW1wb3J0ICcuL2Fzc2V0cy9jc3MvZmxhZ3MubWluLmNzcyc7DQo="},{"version":3,"sources":["LanguagesDropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;AACA","file":"LanguagesDropdown.vue","sourceRoot":"node_modules/vue-languages-dropdown/src","sourcesContent":["<template>\r\n  <div class=\"languages-dropdown-container\">\r\n  \r\n     <div class=\"dropdown\">\r\n    <button v-on:click=\"toggle\" class=\"dropbtn\" :style=\"mapCustomCss\">\r\n        <div class=\"selected-lang-text\">\r\n            <i v-bind:class=\"'flag flag-'+selectFlag\"></i> {{selectedLang}}\r\n        </div>\r\n    </button>\r\n    <input type=\"search\" placeholder=\"Search..\" class=\"search-input\" ref=\"searchInput\" v-model=\"search\" autocomplete=\"off\" v-bind:class=\"{show : isOpen}\" v-if=\"this.showSearchInput\">\r\n    <div id=\"myDropdown\" class=\"dropdown-content\" v-bind:class=\"{show : isOpen, hide : !isOpen}\" style=\"overflow-x: hidden;\">\r\n\r\n      <div class=\"wrapper\">\r\n\r\n        <a v-if=\"filteredLanguages.length == 0\">\r\n        <div class=\"language-item\">\r\n             <div  class=\"text-center\"><span>No result found.</span></div>\r\n        </div>\r\n        </a>\r\n\r\n      <a v-for=\"(c,i) in filteredLanguages\" v-on:click=\"onLanguageChange(c.code,c.name,c.nativeName,c.countries)\">\r\n        <div  class=\"float-left lang-item\">\r\n            <span v-if=\"displayText=='name'\"> {{c.name}}</span>\r\n            <span v-if=\"displayText=='native'\">{{c.nativeName}}</span>\r\n        </div>\r\n\r\n         <div class=\"right-container\">\r\n            <div v-on:click=\"scrollLeft(i)\" class=\"scroll-btn float-left\">«</div>\r\n\r\n        <div class=\"wrapper-box\" v-bind:class=\"'wrapper-box-'+i\">\r\n          <span v-for=\"f in c.countries\" class=\"mr-5\"><i v-bind:class=\"'flag flag-'+f\"></i></span>\r\n        </div>\r\n\r\n         <div v-on:click=\"scrollRight(i)\" class=\"scroll-btn float-right\">»</div>\r\n\r\n       </div>\r\n\r\n      </a>\r\n\r\n    </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  import jsonfile from './data/languages.json';\r\n  \r\n  export default {\r\n    name     : \"LanguagesDropdown\",\r\n    props: {\r\n      showSearchInput :{\r\n        type    : Boolean,\r\n        default : true\r\n      },\r\n      selected: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      btnBgColor :{\r\n        type : String,\r\n        default : '#ed4c46'\r\n      },\r\n      btnFontColor:{\r\n        type : String,\r\n        default : '#fff'\r\n      },\r\n      displayText : {\r\n        type : String,\r\n        default : 'name',\r\n        validator(text) {\r\n          return ['name', 'native'].includes(text);\r\n        },\r\n      },\r\n      selectedLanguages : {\r\n        type : Array,\r\n        default : ()=> []\r\n      },\r\n      showSelectedNative : {\r\n        type    : Boolean,\r\n        default : false\r\n      }\r\n    },\r\n    mounted()\r\n    {\r\n      let index         = this.languages.map(function (lang) { return lang.code; }).indexOf(this.selected.toLowerCase());\r\n      let userIsoCode   = this.showSelectedNative ? this.languages[index]['nativeName'] : this.languages[index]['name'];    \r\n      this.selectedLang = userIsoCode;\r\n      this.selectFlag   = this.languages[index]['countries'][0];\r\n    },\r\n    data: function() {\r\n      return {\r\n        selectedLang : 'English',\r\n        search       : '',\r\n        isOpen       : false,\r\n        selectFlag   : 'gb',\r\n        languages    : jsonfile\r\n      }\r\n\r\n    },\r\n    computed:\r\n    {\r\n      mapCustomCss ()\r\n      {\r\n        return{\r\n          'background-color' : this.btnBgColor,\r\n          'color' : this.btnFontColor\r\n        }\r\n      },\r\n      getOnlySelectedLanguages : function()\r\n      {\r\n        var self = this;\r\n        return this.languages.filter(function(lang){\r\n           return lang.code == self.selectedLanguages[self.selectedLanguages.indexOf(lang.code)]\r\n        })\r\n      },\r\n      filteredLanguages:function()\r\n      {\r\n        let self = this;\r\n        let data = this.getOnlySelectedLanguages.length > 0 ? this.getOnlySelectedLanguages : this.languages;\r\n        return data.filter(function(lang){\r\n          return (\r\n           lang.code.toLowerCase().indexOf(self.search.toLowerCase())>=0\r\n           || lang.name.toLowerCase().indexOf(self.search.toLowerCase())>=0\r\n           || lang.nativeName.toLowerCase().indexOf(self.search.toLowerCase())>=0); \r\n        });\r\n      }\r\n    },\r\n    methods: {\r\n\r\n      onLanguageChange: function (code,name,native,countries) \r\n      {\r\n        let data          = { 'code' : code, 'name' : name, 'native' : native, 'countries' : countries};\r\n        this.selectedLang = this.showSelectedNative ? native : name;    \r\n        this.$emit('change', data);\r\n        this.hide();\r\n        this.setFlag(countries[0]);\r\n      },\r\n      toggle: function() {\r\n        this.isOpen = !this.isOpen;\r\n      },\r\n      show: function() {\r\n        this.isOpen = true;\r\n      },\r\n      hide: function() {\r\n        this.isOpen = false;\r\n      },\r\n      scrollLeft : function(i) {\r\n        let content = document.querySelector(\".wrapper-box-\"+i);\r\n        content.scrollLeft -= 50;\r\n      },\r\n      scrollRight : function(i) {\r\n        let content = document.querySelector(\".wrapper-box-\"+i);\r\n        content.scrollLeft += 50;\r\n      },\r\n      setFlag : function(f)\r\n      {\r\n        this.selectFlag = f;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n@import './assets/css/style.css';\r\n@import './assets/css/flags.min.css';\r\n</style>"]}]}