{"remainingRequest":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/IdeaProjects/collectedonnee/src/views/app/cg/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/src/views/app/cg/list.vue","mtime":1659178749146},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCByZWdpc3RlcmNnIGZyb20gIi4uL2NvbXBvbmVudHMvcmVnaXN0ZXJjZyIKaW1wb3J0IHsgbWFwR2V0dGVycyxtYXBBY3Rpb25zIH0gZnJvbSAidnVleCI7CmltcG9ydCB7IG1ha2VUb2FzdCB9IGZyb20gJy4uLy4uLy4uL3BsdWdpbnMvZnVuY3Rpb25zJwoKZXhwb3J0IGRlZmF1bHQgewogICAgY29tcG9uZW50czp7cmVnaXN0ZXJjZ30sCiAgICBwcm9wczp7CiAgICAgICAgcm93ZXM6T2JqZWN0CiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBzaG93OmZhbHNlLAogICAgICAgICAgICBkYXRlOm5ldyBEYXRlKCksCiAgICAgICAgfTsKICAgIH0sCiAgICBjb21wdXRlZDp7CiAgICAuLi5tYXBHZXR0ZXJzKFsiZ2V0UmVnaXN0ZXJTdGF0dXMiXSkKCiAgICB9LAoKICAgIG1ldGhvZHM6ewoKICAgICAgICAuLi5tYXBBY3Rpb25zKFsicmVnaXN0ZXJjZ2UiXSksCgogICAgICAgIHJlZ2lzdGVyY2dzKHZhcmlhbnQgPSBudWxsKXsKICAgICAgICAgICAgdGhpcy5zaG93PXRydWUKICAgICAgICAgICAgdGhpcy5yZWdpc3RlcmNnZSh2YXJpYW50KQogICAgICAgIH0sCgogICAgICAgIG1ha2VUb2FzdCh2YXJpYW50ID0gbnVsbCx0eXBlKSB7CgogICAgICAgICAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDogdHlwZT0iZXJyb3IiOyBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgMTogdHlwZT0ic3VjY2VzcyIgOyBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgMjogdHlwZT0iaW5mbyI7IGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSAzOiB0eXBlPSJ3YXJuaW5nIjsgYnJlYWs7CgogICAgICAgICAgICB9CgogICAgICAgICAgICB0aGlzLiR0b2FzdGVkLnNob3codGhpcy4kdCh2YXJpYW50KSx7dHlwZTp0eXBlfSkKCgogICAgICAgIH0sCiAgICB9LAoKICAgIG1vdW50ZWQoKXsKICAgICAgICBjb25zb2xlLmxvZygnbW91bnRlZCcsdGhpcy5yb3dlcykKICAgICAgICAvL3RoaXMuc2hvdyA9ICh0eXBlb2YgdGhpcy5yb3dlcyA9PT0gInVuZGVmaW5lZCIpCiAgICAgICAgLy9jb25zb2xlLmxvZygnbW91bnRlZCcsdGhpcy5zaG93KQogICAgfSwKCiAgICB3YXRjaDp7CgogICAgICAgIGdldFJlZ2lzdGVyU3RhdHVzKHZhbHVlKXsKCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzdGF0dXNob2xkJyx2YWx1ZSkKICAgICAgICAgICAgLy90aGlzLiRyZWZzLnJlZ2lzdGVyUGFydG5lcnMucmVnaXN0ZXJwKHRydWUpCgogICAgICAgICAgICBpZih2YWx1ZS5zdWNjZXNzKXsKCiAgICAgICAgICAgICAgICBtYWtlVG9hc3QodGhpcy4kdCh2YWx1ZS5tZXNzYWdlLmNvZGUpLHZhbHVlLm1lc3NhZ2UubGV2ZWwpCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc3RhdHVzaG9sZCcsdmFsdWUpCiAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLmNhcnRlZ3Jpc2UuaW5pdGZvcm1jZygpCiAgICAgICAgICAgICAgICAvL3RoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ2FsbHZpc2l0X2xpc3QnLHBhcmFtczp7aWQ6JzAnfSB9KQoKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICBtYWtlVG9hc3QodGhpcy4kdCh2YWx1ZS5tZXNzYWdlLmNvZGUpLHZhbHVlLm1lc3NhZ2UubGV2ZWwpCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmNnLnN0YXR1c3JlZ2lzdGVyPWZhbHNlCiAgICAgICAgICAgIHRoaXMuc2hvdz1mYWxzZQoKICAgICAgICB9CgogICAgfQp9Owo="},{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA","file":"list.vue","sourceRoot":"src/views/app/cg","sourcesContent":["<template>\n    <div class=\"main-content\">\n        <!--<breadcumb :page=\"$t('register_cg')\" :folder=\"'Lists'\" />-->\n     <!--   <div class=\"breadcrumb\" style=\"padding: 0!important;margin:0 !important\">\n            <slot name=\"header\">\n\n                    <router-link :to=\"{ name: 'visit_list', params: { id:1 }}\">\n\n                        <button class=\"btn btn-gray-100 btn-icon rounded-circle m-1\" type=\"button\">\n                            <span class=\"ul-btn__icon\"><i class=\"i-Back1\"></i></span></button>\n\n                    </router-link>\n\n                <h1>{{$t('register_cg')}}</h1>\n\n            </slot>\n        </div>-->\n\n           <!-- -->\n        <b-overlay :show=\"show\" rounded=\"sm\">\n\n            <registercg\n                    :show=\"show\"\n                    :rowes=\"rowes\"\n                    ref=\"cartegrise\"\n                    @registercge=\"registercgs\">\n\n            </registercg>\n\n        </b-overlay>\n\n    </div>\n</template>\n\n<script>\n    import registercg from \"../components/registercg\"\n    import { mapGetters,mapActions } from \"vuex\";\n    import { makeToast } from '../../../plugins/functions'\n\n    export default {\n        components:{registercg},\n        props:{\n            rowes:Object\n        },\n        data() {\n            return {\n                show:false,\n                date:new Date(),\n            };\n        },\n        computed:{\n        ...mapGetters([\"getRegisterStatus\"])\n\n        },\n\n        methods:{\n\n            ...mapActions([\"registercge\"]),\n\n            registercgs(variant = null){\n                this.show=true\n                this.registercge(variant)\n            },\n\n            makeToast(variant = null,type) {\n\n                switch (type) {\n                    case 0: type=\"error\"; break;\n                    case 1: type=\"success\" ; break;\n                    case 2: type=\"info\"; break;\n                    case 3: type=\"warning\"; break;\n\n                }\n\n                this.$toasted.show(this.$t(variant),{type:type})\n\n\n            },\n        },\n\n        mounted(){\n            console.log('mounted',this.rowes)\n            //this.show = (typeof this.rowes === \"undefined\")\n            //console.log('mounted',this.show)\n        },\n\n        watch:{\n\n            getRegisterStatus(value){\n\n                console.log('statushold',value)\n                //this.$refs.registerPartners.registerp(true)\n\n                if(value.success){\n\n                    makeToast(this.$t(value.message.code),value.message.level)\n                    console.log('statushold',value)\n                    this.$refs.cartegrise.initformcg()\n                    //this.$router.push({ name: 'allvisit_list',params:{id:'0'} })\n\n                }else{\n                    makeToast(this.$t(value.message.code),value.message.level)\n                }\n\n                this.$store.state.cg.statusregister=false\n                this.show=false\n\n            }\n\n        }\n    };\n</script>\n"]}]}