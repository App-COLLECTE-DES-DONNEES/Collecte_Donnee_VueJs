{"remainingRequest":"C:\\wamp64\\www\\toolsmctc\\node_modules\\babel-loader\\lib\\index.js!C:\\wamp64\\www\\toolsmctc\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\wamp64\\www\\toolsmctc\\src\\store\\modules\\cg.js","dependencies":[{"path":"C:\\wamp64\\www\\toolsmctc\\src\\store\\modules\\cg.js","mtime":1606406006607},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/wamp64/www/toolsmctc/src/store/modules/cg.js"],"names":["axios","constants","state","marques","energies","propriolist","statusregister","cg","visites","cgs","actions","visiteenattente","commit","get","resource_url","then","holds","data","success","catch","error","console","log","visitestatus","gmarques","genergies","gproprietaire","searchcartegrise","registercge","post","getcge","getters","getVisiteWaiting","getMarques","getEnergie","getRegisterStatus","getProprioList","getCg","getCgs","mutations","SETVISITEWAITING","SETMARQUES","SETENERGIE","SETREGISTERSTATUS","SETPROPRIETAIRE","SETCG","SETCGS"],"mappings":"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","sourcesContent":["\r\nimport axios from 'axios'\r\nimport constants from '../../plugins/constants'\r\n\r\nconst state = {\r\n    marques:[],\r\n    energies:[],\r\n    propriolist:[],\r\n    statusregister:false,\r\n    cg:{},\r\n    visites:[],\r\n    cgs:[]\r\n};\r\n\r\nconst actions = {\r\n\r\n    async visiteenattente({commit}){\r\n\r\n        axios.get(constants.resource_url+\"visitesencours\")\r\n\r\n            .then(holds => {\r\n\r\n                if(holds.data.success) {\r\n                    commit(\"SETVISITEWAITING\", holds.data.data)\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n\r\n    },\r\n    async visitestatus({commit},data){\r\n\r\n        axios.get(constants.resource_url+\"visite/codestatut/\"+data)\r\n\r\n            .then(holds => {\r\n\r\n                if(holds.data.success) {\r\n                    commit(\"SETVISITEWAITING\", holds.data.data)\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n\r\n    },\r\n\r\n    async gmarques({commit}){\r\n\r\n        axios.get(constants.resource_url+\"marques\")\r\n\r\n            .then(holds => {\r\n\r\n                if(holds.data.success) {\r\n                    commit(\"SETMARQUES\", holds.data.data)\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n\r\n    },\r\n\r\n    async genergies({commit}){\r\n\r\n        axios.get(constants.resource_url+\"energies\")\r\n\r\n            .then(holds => {\r\n\r\n                if(holds.data.success) {\r\n                    commit(\"SETENERGIE\", holds.data.data)\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n\r\n    },\r\n    async gproprietaire({commit}){\r\n\r\n        axios.get(constants.resource_url+\"proprietaires\")\r\n\r\n            .then(holds => {\r\n\r\n                if(holds.data.success) {\r\n                    commit(\"SETPROPRIETAIRE\", holds.data.data)\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n\r\n    },\r\n\r\n    async searchcartegrise({commit},data){\r\n\r\n        axios.get(constants.resource_url+\"cartegrise/search/\"+data)\r\n\r\n            .then(cg => {\r\n\r\n                if(cg.data.success) {\r\n\r\n                    console.log('cgrise',cg.data.data)\r\n                    commit(\"SETCG\", cg.data.data)\r\n\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n\r\n    },\r\n\r\n    async registercge({commit},data){\r\n\r\n        axios.post(constants.resource_url+\"cartegrise\",data)\r\n\r\n            .then(holds => {\r\n\r\n                console.log('holds',holds);\r\n                commit(\"SETREGISTERSTATUS\", holds.data.success)\r\n                /*if(holds.data.success) {\r\n\r\n                }*/\r\n            })\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n\r\n    },\r\n    async getcge({commit}){\r\n\r\n        axios.get(constants.resource_url+\"cartegrises\")\r\n\r\n            .then(holds => {\r\n\r\n                console.log('holds',holds);\r\n                commit(\"SETCGS\", holds.data.data)\r\n                /*if(holds.data.success) {\r\n\r\n                }*/\r\n            })\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n\r\n    },\r\n\r\n};\r\n\r\nconst getters = {\r\n    getVisiteWaiting : state => state.visites,\r\n    getMarques : state => state.marques,\r\n    getEnergie : state => state.energies,\r\n    getRegisterStatus : state => state.statusregister,\r\n    getProprioList : state => state.propriolist,\r\n    getCg : state => state.cg,\r\n    getCgs : state => state.cgs,\r\n}\r\n\r\nconst mutations = {\r\n    SETVISITEWAITING: (state,visites)=>state.visites=visites,\r\n    SETMARQUES: (state,marques)=>state.marques=marques,\r\n    SETENERGIE: (state,energies)=>state.energies=energies,\r\n    SETREGISTERSTATUS: (state,statusregister)=>state.statusregister=statusregister,\r\n    SETPROPRIETAIRE: (state,propriolist)=>state.propriolist=propriolist,\r\n    SETCG: (state,cg)=>state.cg=cg,\r\n    SETCGS: (state,cgs)=>state.cgs=cgs,\r\n};\r\n\r\n\r\nexport default {\r\n    state,getters,actions,mutations\r\n}"]}]}