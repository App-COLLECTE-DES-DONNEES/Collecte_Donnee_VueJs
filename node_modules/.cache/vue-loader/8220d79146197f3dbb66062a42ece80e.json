{"remainingRequest":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/IdeaProjects/collectedonnee/src/views/app/components/CanvasDraw.vue?vue&type=style&index=0&id=39c329dd&scoped=true&lang=css&","dependencies":[{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/src/views/app/components/CanvasDraw.vue","mtime":1661425840146},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/IdeaProjects/collectedonnee/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNhbnZhcy13cmFwcGVyIHsKICBkaXNwbGF5OiBncmlkOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQojY2FudmFzIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5OwogIHotaW5kZXg6IDA7Cn0KI2N1cnNvciB7CiAgei1pbmRleDogMTsKICBwb2ludGVyLWV2ZW50czogbm9uZTsKfQouYWN0aXZlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGVhODc4ICFpbXBvcnRhbnQ7Cn0KLnRvb2xzIHsKICBtYXJnaW46IDA7CiAgcGFkZGluZzogMDsKfQoudG9vbHMgbGl7CiAgcGFkZGluZzogNHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNjOGM4Yzg7CiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjYWJhYWFhOwp9Ci50b29scyBsaTpub3QoOmxhc3QtY2hpbGQpIHsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2FiYWFhYTsKfQouZHJhdy1hcmVhIGNhbnZhcyB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGxlZnQ6IDA7CiAgdG9wOiAwOwogIGJvcmRlcjogMnB4IHNvbGlkICNjOGM4Yzg7CiAgYm9yZGVyLXJhZGl1czogMTBweCAwIDEwcHggMTBweDsKfQo="},{"version":3,"sources":["CanvasDraw.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CanvasDraw.vue","sourceRoot":"src/views/app/components","sourcesContent":["<template>\n  <div class=\"canvas-wrapper\" ref=\"canvasWrapper\">\n    <div class=\"draw-area\">\n      <canvas id=\"canvas\" ref=\"canvas\" :width=\"width\" :height=\"height\"></canvas>\n      <canvas id=\"cursor\" ref=\"cursor\" :width=\"width\" :height=\"height\"></canvas>\n    </div>\n    <ul class=\"tools\">\n      <li id=\"tool-pencil\" :class=\"{ active: selectedToolIdx === 0 }\" @click=\"changeTool(0)\">\n        <img src=\"@/assets/edit.svg\"/>\n      </li>\n      <li id=\"tool-eraser\" :class=\"{ active: selectedToolIdx === 1 }\" @click=\"changeTool(1)\">\n        <img src=\"@/assets/eraser.svg\"/>\n      </li>\n      <li id=\"tool-color-palette\" @click=\"showColorPalette()\">\n        <img src=\"@/assets/color-palette.svg\"/>\n      </li>\n      <li id=\"tool-download\" @click=\"download()\">\n        <img src=\"@/assets/download.svg\"/>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'CanvasDraw',\n  props: {\n    brushSize: {\n      type: Number,\n      default: 3,\n    },\n    width: {\n      type: Number,\n      default: 640,\n    },\n    height: {\n      type: Number,\n      default: 480,\n    },\n    outputName: {\n      type: String,\n      default: 'canvas',\n    },\n  },\n  data() {\n    return {\n      canvasContext: null,\n      cursorContext: null,\n      isDrawing: false,\n      lastX: 0,\n      lastY: 0,\n      tools: [\n        {\n          name: 'Pencil',\n          color: '#000000',\n        },\n        {\n          name: 'Eraser',\n        },\n      ],\n      selectedToolIdx: 0,\n    };\n  },\n  mounted() {\n    this.setCanvas();\n    this.bindEvents();\n  },\n  methods: {\n    setCanvas() {\n      this.$refs.canvasWrapper.style.gridTemplateColumns = `${this.width}px 30px`;\n      this.$refs.canvasWrapper.style.width = `${this.width + 30}px`;\n      this.$refs.canvasWrapper.style.height = `${this.height}px`;\n      this.canvasContext = this.$refs.canvas.getContext('2d');\n      this.canvasContext.lineJoin = 'round';\n      this.canvasContext.lineCap = 'round';\n      this.canvasContext.lineWidth = this.brushSize;\n      this.canvasContext.strokeStyle = this.tools[this.selectedToolIdx].color;\n      this.cursorContext = this.$refs.cursor.getContext('2d');\n    },\n    bindEvents() {\n      this.$refs.canvas.addEventListener('mousedown', (event) => {\n        this.isDrawing = true;\n        [this.lastX, this.lastY] = [event.offsetX, event.offsetY];\n      });\n      this.$refs.canvas.addEventListener('mousemove', this.draw);\n      this.$refs.canvas.addEventListener('mouseup', () => this.isDrawing = false);\n      this.$refs.canvas.addEventListener('mouseout', () => this.isDrawing = false);\n    },\n    changeTool(tool) {\n      this.selectedToolIdx = tool;\n\n      if(tool==0){\n        this.brushSize=3\n        this.canvasContext.lineWidth = this.brushSize;\n      }else{\n        this.brushSize=12\n        this.canvasContext.lineWidth = this.brushSize;\n      }\n      this.setCanvas()\n    },\n    draw(event) {\n      this.drawCursor(event);\n      if (!this.isDrawing) return;\n      if (this.tools[this.selectedToolIdx].name === 'Eraser') {\n        this.canvasContext.globalCompositeOperation = 'destination-out';\n      } else {\n        this.canvasContext.globalCompositeOperation = 'source-over';\n        this.canvasContext.strokeStyle = this.tools[this.selectedToolIdx].color;\n      }\n      this.canvasContext.beginPath();\n      this.canvasContext.moveTo(this.lastX, this.lastY);\n      this.canvasContext.lineTo(event.offsetX, event.offsetY);\n      this.canvasContext.stroke();\n      [this.lastX, this.lastY] = [event.offsetX, event.offsetY];\n    },\n    drawCursor(event) {\n      this.cursorContext.beginPath();\n      this.cursorContext.ellipse(\n          event.offsetX, event.offsetY,\n          this.brushSize, this.brushSize,\n          Math.PI / 4, 0, 2 * Math.PI\n      );\n      this.cursorContext.stroke();\n      setTimeout(() => {\n        this.cursorContext.clearRect(0, 0, this.width, this.height);\n      }, 100);\n    },\n    showColorPalette() {\n      const colorPalette = document.createElement('input');\n      colorPalette.addEventListener('change', (event) => {\n        this.tools[0].color = event.target.value;\n      });\n      colorPalette.type = 'color';\n      colorPalette.value = this.tools[0].color;\n      colorPalette.click();\n    },\n    download() {\n      const link = document.createElement('a');\n      link.download = `${this.outputName}.png`;\n      link.href = this.$refs.canvas.toDataURL()\n\n      console.log('this.$refs.canvas.toDataURL()',this.$refs.canvas.toDataURL())\n      //link.click();\n\n      // convert to Blob (async)\n      this.$refs.canvas.toBlob( (blob) => {\n        const file = new File( [ blob ], \"mycanvas.png\" );\n        const dT = new DataTransfer();\n        dT.items.add( file );\n\n        let formdata = new FormData();\n        formdata.append('image',file)\n\n        this.$emit('send',formdata)\n\n      } );\n    },\n  }\n}\n</script>\n<style scoped>\n.canvas-wrapper {\n  display: grid;\n  position: relative;\n}\n#canvas {\n  background-color: #f9f9f9;\n  z-index: 0;\n}\n#cursor {\n  z-index: 1;\n  pointer-events: none;\n}\n.active {\n  background-color: #dea878 !important;\n}\n.tools {\n  margin: 0;\n  padding: 0;\n}\n.tools li{\n  padding: 4px;\n  background-color: #c8c8c8;\n  border-left: 1px solid #abaaaa;\n}\n.tools li:not(:last-child) {\n  border-bottom: 1px solid #abaaaa;\n}\n.draw-area canvas {\n  position: absolute;\n  left: 0;\n  top: 0;\n  border: 2px solid #c8c8c8;\n  border-radius: 10px 0 10px 10px;\n}\n</style>"]}]}