{"remainingRequest":"C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\toolsmctc\\src\\views\\app\\caisses\\box.vue?vue&type=template&id=c31f0306&scoped=true&xmlns%3Av-slot=http%3A%2F%2Fwww.w3.org%2F1999%2FXSL%2FTransform&","dependencies":[{"path":"C:\\wamp64\\www\\toolsmctc\\src\\views\\app\\caisses\\box.vue","mtime":1614853893882},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSJtYWluLWNvbnRlbnQiPgoKICAgICAgICA8c2FsZXNyZWNlaXB0IDplbmNhaXNzZW1lbnRzPSJlbmNhaXNzZW1lbnRzIgogICAgICAgICAgICAgICAgICAgICAgOmVuY29tcHRlPSJlbmNvbXB0ZSIKICAgICAgICAgICAgICAgICAgICAgIDpib3g9ImJveCIKICAgICAgICAgICAgICAgICAgICAgIDppbnZvaWNlX3RheCA9Imludm9pY2VfdGF4cyIKICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iZmllbGQiCiAgICAgICAgICAgICAgICAgICAgICA6Y29kZXBheXM9ImNvZGVwYXlzIgogICAgICAgICAgICAgICAgICAgICAgOmRldmlzZT0iZGV2aXNlIgogICAgICAgICAgICAgICAgICAgICAgOmxpc3Rwcm9kdWN0cz0ibGlzdHByb2R1Y3RzIgogICAgICAgICAgICAgICAgICAgICAgOmNvdW50cnk9ImNvdW50cnkiCiAgICAgICAgICAgICAgICAgICAgICBAcHJpbnQ9InByaW50IgogICAgICAgIEBjYW5jZWxzPSJjYW5jZWxzIj48L3NhbGVzcmVjZWlwdD4KCgogICAgICAgIDxiaWxhbiA6ZGF0YT0iYmlsYW4iPjwvYmlsYW4+CgogICAgICAgIDxiLWJ1dHRvbiAgc3R5bGU9InJpZ2h0OiAwO3Bvc2l0aW9uOiBhYnNvbHV0ZSIgdi1pZj0iYm94b3Blbj09PXRydWUiIHBpbGwgdmFyaWFudD0ic3VjY2VzcyBtLTEiCiAgICAgICAgICAgICAgICAgICBAY2xpY2sgPSJvcGVubW9kYWxib3giICA+PGkgY2xhc3M9ImktRm9sZGVyLU9wZW4iPjwvaT4KICAgICAgICA8L2ItYnV0dG9uPgoKICAgICAgICA8Yi1idXR0b24gIHN0eWxlPSJyaWdodDogMDtwb3NpdGlvbjogYWJzb2x1dGUiIHYtZWxzZSBwaWxsIHZhcmlhbnQ9ImRhbmdlciBtLTEiIEBjbGljayA9ImNsb3NlbW9kYWxib3giID4KICAgICAgICAgICAgPGkgY2xhc3M9ImktQ2xvc2UiPjwvaT48L2ItYnV0dG9uPgoKICAgICAgICA8Yi1jb2wgbWQ9IjEyIiBzdHlsZT0icG9zaXRpb246cmVsYXRpdmU7dGV4dC1hbGlnbjogcmlnaHQiID4KICAgICAgICAgICAgPCEtLXt7JHQoJ2Nsb3NlX2JveCcpfX0tLT4KCiAgICAgICAgICAgIDxiLW92ZXJsYXkgOnNob3c9Im9wZW5iIiByb3VuZGVkPSJzbSIgPgoKICAgICAgICAgICAgICAgIDxiLW1vZGFsIGlkPSJjb25maXJtb3BlbkFjY291bnQiIDp0aXRsZT0iJHQoJ29wZW5fYm94JykiIGhpZGUtZm9vdGVyPgoKICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSAjbW9kYWwtaGVhZGVyPSJ7fSI+CiAgICAgICAgICAgICAgICAgICAgPCEtLSBFbXVsYXRlIGJ1aWx0IGluIG1vZGFsIGhlYWRlciBjbG9zZSBidXR0b24gYWN0aW9uIC0tPgogICAgICAgICAgICAgICAgICAgIDxoNT57eyR0KCdvcGVuX2JveCcpfX08L2g1PgogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KCiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2RlZmF1bHQ9InsgIH0iPgoKICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ib3V2ZXJ0dXJlQW1vdW50IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0ibnVtYmVyIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgOnBsYWNlaG9sZGVyPSIkdCgnTW9udGFudF9FbmNhaXNzZScpIgogICAgICAgICAgICAgICAgICAgID48L2ItZm9ybS1pbnB1dD4KICAgICAgICAgICAgICAgICAgICA8cD48L3A+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gIDpkaXNhYmxlZD0iIW9wZW5iIiBAY2xpY2s9Im9wZW5Cb3goKSIgdmFyaWFudD0ib3V0bGluZS1zdWNjZXNzIiBzdHlsZT0ibWFyZ2luLXJpZ2h0OiAxNXB4Ij57eyR0KCdvcGVuJyl9fTwvYi1idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KCiAgICAgICAgICAgICAgICA8L2ItbW9kYWw+CgogICAgICAgICAgICA8L2Itb3ZlcmxheT4KCiAgICAgICAgICAgIDwhLS08Yi1vdmVybGF5IDpzaG93PSJjbG9zZWIiIHJvdW5kZWQ9InNtIiA+LS0+CgogICAgICAgICAgICAgICAgPGItbW9kYWwgaWQ9ImNvbmZpcm1jbG9zZUFjY291bnQiICB0aXRsZT0iQ29uZmlybWVyIGxhIGZlcm1ldHVyZSBkZSBsYSBDYWlzc2UiIGhpZGUtZm9vdGVyPgogICAgICAgICAgICAgICAgPHA+PC9wPgoKICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSAjZGVmYXVsdD0ie30iPgoKICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJvdXZlcnR1cmVBbW91bnQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJudW1iZXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6cGxhY2Vob2xkZXI9IiR0KCdNb250YW50X0Nsb3NlJykiCgogICAgICAgICAgICAgICAgICAgID48L2ItZm9ybS1pbnB1dD4KCgogICAgICAgICAgICAgICAgICAgIDxwPjwvcD4KCiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gOmRpc2FibGVkPSIhY2xvc2ViIiB0eXBlPSJzdWJtaXQiIHZhcmlhbnQ9Im91dGxpbmUtc3VjY2VzcyByaWdodHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImNsb3NlQm94KCkiID57eyR0KCdjbG9zZScpfX08L2ItYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgICAgICA8L2ItbW9kYWw+CiAgICAgICAgICAgIDwhLS08L2Itb3ZlcmxheT4tLT4KCiAgICAgICAgPC9iLWNvbD4KCiAgICAgICAgPGJyZWFkY3VtYiA6cGFnZT0iJHQoJ2NhaXNzZScpIiA6Zm9sZGVyPSJkYXRlIiAgIC8+IDwhLS06bW9udGFudD0iIi0tPgoKICAgICAgICA8Yi1vdmVybGF5IDpzaG93PSJzaG93IiByb3VuZGVkPSJzbSIgPgoKICAgICAgICAgICAgPGItY2FyZCAgOmFyaWEtaGlkZGVuPSJzaG93ID8gJ3RydWUnIDogbnVsbCIgIGNsYXNzPSJvdmVybGF5LWJveCI+CiAgICAgICAgICAgICAgICA8IS0tdGl0bGU9IkZvcm0gSW5wdXRzIi0tPgogICAgICAgICAgICAgICAgPGItcm93PgogICAgICAgICAgICAgICAgICAgIDxiLWNvbCBtZD0iNiI+CgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1yb3c+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Q2F0cHJvZHVjdGVzIDpjYXRzPSJjYXQiICBARmV0Y1Byb2R1Y3Q9IkZldGNoUHJvZHVjdCI+PC9DYXRwcm9kdWN0ZXM+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYi1yb3c+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPGItcm93PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImNvbC1tZC0xMCBtYi0zMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmxhYmVsPSIkdCgnUmVmZXJlbmNlJykiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsLWZvcj0iaW5wdXQtMSIKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZSA6Zm9ybWF0dGVkcmVmZXJlbmNlVmFsdWU9ImZvcm0uUmVmZXJlbmNlIiBAc2V0bGlzdHByPSJzZXRsaXN0cHIiIEBzZXRyZWZvdmVybGF5PSJzZXRvdmVybGF5IiBAc2V0cmVmZXJlbmNlPSJzZXRyZWZlcmVuY2UiPjwvcmVmZXJlbmNlPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNwaW5uZXIgc3Bpbm5lci1pbmZvIiB2LWlmPSJzaG93X3JlZmVyIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7bWFyZ2luLXRvcDoyOXB4IWltcG9ydGFudDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDozM3B4IWltcG9ydGFudDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDoxNXB4O2hlaWdodDoxNXB4OyI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tPGRpdiBjbGFzcz0iY29sLW1kLTEiID4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXN1Y2Nlc3MgIGJ0bi1pY29uIG0tMSIgQGNsaWNrPSJzZWFyY2hyZWZlcmVuY2UoKSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tdG9wOjI1cHghaW1wb3J0YW50O3BhZGRpbmc6NHB4IWltcG9ydGFudDsiIHR5cGU9ImJ1dHRvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ1bC1idG5fX2ljb24iPjxpIGNsYXNzPSJpLVNlYXJjaC1QZW9wbGUiPjwvaT48L3NwYW4+PC9idXR0b24+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+LS0+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2Itcm93PgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1vdmVybGF5IDpzaG93PSJmb3JjYXJkIiByb3VuZGVkPSJzbSIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGItcm93IGNsYXNzPSJzY3JvbGwtY2FyZCI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiLWNhcmQgbm8tYm9keSB2LWZvcj0iaXRlbSBpbiBwcm9kdWN0cyIgOmtleT0iaXRlbS5wcm9kdWl0LnByb2R1aXRJZCIgIEBjbGljaz0iQWRkY2F0KGl0ZW0pIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYmctZGFyayB0ZXh0LXdoaXRlIG8taGlkZGVuIG1iLTMwIHRhaWxsZSAiIHN0eWxlPSJtYXJnaW4tbGVmdDoyOHB4IWltcG9ydGFudDsiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHYtaWY9Iml0ZW0ucHJvZHVpdC5pbWc9PW51bGwiIHNyYz0iLi4vLi4vLi4vYXNzZXRzL2ltYWdlcy9waG90by1sb25nLTEuanBnIiBhbHQgLz4KCgkJCQkJCQkJPGltZyB2LWVsc2UgOnNyYz0icmVzb3VyY2VzX3VybHMgKyBpdGVtLnByb2R1aXQuaW1nIiBhbHQgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tPGltZyB2LWlmPSJpdGVtLnByb2R1aXQuaW1nPT1udWxsIiB2LWF1dGgtaW1hZ2U9Ii4uLy4uLy4uL2Fzc2V0cy9pbWFnZXMvcGhvdG8tbG9uZy0xLmpwZyIgYWx0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgdi1lbHNlIHYtYXV0aC1pbWFnZT0iLi4vLi4vLi4vYXNzZXRzL2ltYWdlcy9waG90by1sb25nLTEuanBnIiBhbHQgLz4tLT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1pbWctb3ZlcmxheSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIHB0LTQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLXRpdGxlIG1iLTIgdGV4dC13aGl0ZSAiIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPnt7JHQoaXRlbS5wcm9kdWl0LmxpYmVsbGUgKX19PC9oNT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlcGFyYXRvciBib3JkZXItdG9wIG1iLTIiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ItY2FyZD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Itcm93PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Itb3ZlcmxheT4KCiAgICAgICAgICAgICAgICAgICAgPC9iLWNvbD4KICAgICAgICAgICAgICAgICAgICA8Yi1jb2wgbWQ9IjYiPgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1yb3c+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJjb2wtbWQtMTAgbWItMzAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpsYWJlbD0iJHQoJ0NsaWVudCcpIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbC1mb3I9ImlucHV0LTEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEF1dG9Db21wbGV0ZSAgbXNnPSdjbGllbnRzJyA6b3B0aW9uc0tleT0ib3B0aW9uc0tleSIgOm9wdGlvbnNLZXkxPSJvcHRpb25zS2V5MSI+PC9BdXRvQ29tcGxldGU+PCEtLS0tPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ2LW5vLWZvY3VzLXJpbmciIHN0eWxlPSJtYXJnaW4tdG9wOiAxN3B4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gY2xhc3M9ImJ0biBidG4tb3V0bGluZS1zdWNjZXNzICBidG4taWNvbiBtLTEiIHN0eWxlPSJtYXJnaW4tdG9wOjVweCFpbXBvcnRhbnQ7cGFkZGluZzo0cHghaW1wb3J0YW50OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJzaG93TW9kYWwgPSB0cnVlIiB2YXJpYW50PSJwcmltYXJ5IiB2LWItbW9kYWwucmVnaXN0ZXJjdXN0b21lcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48c3BhbiBjbGFzcz0idWwtYnRuX19pY29uIj48aSBjbGFzcz0iaS1BZGQiPjwvaT48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9iLWJ1dHRvbj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJlZ2lzdGVyUGFydG5lcnMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJyZWdpc3RlcmN1c3RvbWVyIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgncmVnaXN0ZXJfY3VzdG9tZXInKSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9ImNsaWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9InJlZ2lzdGVyUGFydG5lcnMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6c2hvd3BhcnRuZXJzPSJzdGF0dXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQHJlZ2lzdGVycGFydG5lcnM9InJlZ2lzdGVyQ3VzdG9tZXIiPjwvcmVnaXN0ZXJQYXJ0bmVycwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGItbW9kYWwgaWQ9InRlc3QiIHRpdGxlPSJMaXN0ZSBkZXMgVGF4ZXMiIGhpZGUtZm9vdGVyPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlICNtb2RhbC1oZWFkZXI9InsgIH0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBFbXVsYXRlIGJ1aWx0IGluIG1vZGFsIGhlYWRlciBjbG9zZSBidXR0b24gYWN0aW9uIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1Pnt7JHQoJ3RheF9saXN0Jyl9fTwvaDU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2RlZmF1bHQ9InsgaGlkZSB9Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0idGFibGUgdGFibGUtYm9yZGVyZWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aGVhZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT0iY29sIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyR0KCdub21fbGFiZWwnKX19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT0iY29sIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyR0KCdkZXNjcmlwdGlvbicpfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPSJjb2wiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7JHQoJ3ZhbHVlJyl9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggc2NvcGU9ImNvbCIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3skdCgndHlwZScpfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90aD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgdi1pZj0idGF4ZXMubGVuZ3RoID09PSAwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIG1kPSIxMiI+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciB2LWVsc2Ugdi1mb3I9Iml0ZW0gaW4gdGF4ZXMiICA6a2V5PSJpdGVtLnRheGVJZCI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tpdGVtLm5vbX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7aXRlbS5kZXNjcmlwdGlvbn19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7aXRlbS52YWxldXJ9fTwvdGQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgdi1pZj0iaXRlbS5pbmNsdXNlID09IHRydWUiPnt7JHQoJ2luY2x1c2UnKX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHYtZWxzZT57eyR0KCdleGNsdXNlJyl9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gIEBjbGljaz0iaGlkZSgpIiB2YXJpYW50PSJvdXRsaW5lLWRhbmdlciIgc3R5bGU9Im1hcmdpbi1yaWdodDogMTVweCI+e3skdCgnY2xvc2UnKX19PC9iLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9iLW1vZGFsPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Itcm93PgoKCgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1yb3c+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJjb2wtbWQtMTAgbWItMzAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpsYWJlbD0iJHQoJ1ZlbmRldXInKSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWwtZm9yPSJpbnB1dC0xIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QXV0b0NvbXBsZXRlIG1zZz0ndmVuZGV1cnMnIDpvcHRpb25zS2V5PSJvcHRpb25zS2V5IiA6b3B0aW9uc0tleTE9Im9wdGlvbnNLZXkxIiA+PC9BdXRvQ29tcGxldGU+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ2LW5vLWZvY3VzLXJpbmciIHN0eWxlPSJtYXJnaW4tdG9wOiAxN3B4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gY2xhc3M9ImJ0biBidG4tb3V0bGluZS1zdWNjZXNzICBidG4taWNvbiBtLTEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tdG9wOjVweCFpbXBvcnRhbnQ7cGFkZGluZzo0cHghaW1wb3J0YW50OyIgIHZhcmlhbnQ9InByaW1hcnkiIHYtYi1tb2RhbC5yZWdpc3RlcnNlbGxlcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48c3BhbiBjbGFzcz0idWwtYnRuX19pY29uIj48aSBjbGFzcz0iaS1BZGQiPjwvaT48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9iLWJ1dHRvbj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLTxidXR0b24gY2xhc3M9ImJ0biBidG4taW5mbyBidG4taWNvbiBtLTEiIHN0eWxlPSJtYXJnaW4tdG9wOjVweCFpbXBvcnRhbnQ7cGFkZGluZzo0cHghaW1wb3J0YW50OyIgdHlwZT0iYnV0dG9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InVsLWJ0bl9faWNvbiI+PGkgY2xhc3M9ImktU2VhcmNoLVBlb3BsZSI+PC9pPjwvc3Bhbj48L2J1dHRvbj4tLT4KCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyZWdpc3RlclBhcnRuZXJzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0icmVnaXN0ZXJzZWxsZXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdyZWdpc3Rlcl9zZWxsZXJzJykiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJ2ZW5kZXVycyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZj0icmVnaXN0ZXJQYXJ0bmVycyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpzaG93cGFydG5lcnM9InN0YXR1dGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAcmVnaXN0ZXJwYXJ0bmVycz0icmVnaXN0ZXJDdXN0b21lciI+PC9yZWdpc3RlclBhcnRuZXJzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Itcm93PgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1yb3c+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1jb2wgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0idGFibGUgdGFibGUtYm9yZGVyZWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT0iY29sIiB2LWZvcj0iaGVhZGVyIGluIGZpZWxkcyIgOmtleT0iaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyR0KGhlYWRlcil9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90aGVhZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgdi1pZj0ibGlzdHByb2R1Y3RzLmxlbmd0aCA9PT0gMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj0iNSIgbWQ9IjEyIj57eyR0KCdub19wcm9kdWN0Jyl9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciB2LWVsc2Ugdi1mb3I9Iml0ZW0gaW4gbGlzdHByb2R1Y3RzIiAgOmtleT0iaXRlbS5wcm9kdWl0X2lkIj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tpdGVtLmxpYmVsbGV9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpdGVtLnJlZmVyZW5jZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJSZWZlcmVuY2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGl0ZW0ucHJpeCB8IGN1cnJlbmN5cyhjb2RlcGF5cyxkZXZpc2UpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9IlNlZVRheFByb2R1Y3QoaXRlbSkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJvLWhpZGRlbiBkLWlubGluZS1ibG9jayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IlNlZSBUYXgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImktRXllLVZpc2libGUgdGV4dC0yNSB0ZXh0LXN1Y2Nlc3MiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0icmVtb3ZlQ2F0UHJvZHVjdHMoaXRlbSkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJvLWhpZGRlbiBkLWlubGluZS1ibG9jayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IkRlbGV0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaS1DbG9zZS1XaW5kb3cgdGV4dC0yNSB0ZXh0LWRhbmdlciI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ItY29sPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiLWNvbCBtZD0iMTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imludm9pY2Utc3VtbWFyeSBmbG9hdC1yaWdodCIgc3R5bGU9IndpZHRoOiAzMDBweCAhaW1wb3J0YW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyR0KCdNb250YW50X3RvdGFsJyl9fToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnt7TW9udGFudF90b3RhbHxjdXJyZW5jeXMoY29kZXBheXMsZGV2aXNlKX19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7JHQoJ1RheGVzJyl9fToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPiB7e2ludm9pY2VfdGF4fGN1cnJlbmN5cyhjb2RlcGF5cyxkZXZpc2UpfX0gPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9ImZvbnQtd2VpZ2h0LWJvbGQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3skdCgnTmV0X2FfUGF5ZXInKX19OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+IHt7aW52b2ljZV90b3RhbHxjdXJyZW5jeXMoY29kZXBheXMsZGV2aXNlKX19IDwvc3Bhbj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDU+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9iLWNvbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9iLXJvdz4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxwPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPGItcm93PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiLWNvbCBtZD0iMyI+PC9iLWNvbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiLWNvbCBtZD0iNSIgc3R5bGU9InZpc2liaWxpdHk6IGhpZGRlbiI+PGg1PjxiPnt7JHQoJ01vbnRhbnRfRW5jYWlzc2UnKX19OjwvYj48L2g1PjwvYi1jb2w+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1jb2wgbWQ9IjQiIHN0eWxlPSJ2aXNpYmlsaXR5OiBoaWRkZW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiLWZvcm0taW5wdXQKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJmb3JtLm1vbnRhbnRfZW5jYWlzc2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0ibnVtYmVyIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSIwIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L2ItZm9ybS1pbnB1dD48L2ItY29sPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9iLXJvdz4KCgoKICAgICAgICAgICAgICAgICAgICA8L2ItY29sPgogICAgICAgICAgICAgICAgPC9iLXJvdz4KCiAgICAgICAgICAgICAgICA8cD48L3A+CiAgICAgICAgICAgICAgICA8cD48L3A+CiAgICAgICAgICAgICAgICA8cD48L3A+CiAgICAgICAgICAgICAgICA8cD48L3A+CiAgICAgICAgICAgICAgICA8Yi1yb3cgPgogICAgICAgICAgICAgICAgICAgIDxiLWNvbCBtZD0iNiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxiLXJvdz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImNvbC1tZC0xMCBtYi0zMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmxhYmVsPSIkdCgnQ29udGFjdCcpIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbC1mb3I9ImlucHV0LTEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEF1dG9Db21wbGV0ZSByZWY9J2NvbnRhY3RzJyBtc2c9J2NvbnRhY3RzJyA6b3B0aW9uc0tleT0ib3B0aW9uc0tleSIgOm9wdGlvbnNLZXkxPSJvcHRpb25zS2V5MSIgPjwvQXV0b0NvbXBsZXRlPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ2LW5vLWZvY3VzLXJpbmcgIiBzdHlsZT0ibWFyZ2luLXRvcDogMTdweDsiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLW91dGxpbmUtc3VjY2VzcyAgYnRuLWljb24gbS0xIiB2LWItbW9kYWwucmVnaXN0ZXJjb250YWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLXRvcDo1cHghaW1wb3J0YW50O3BhZGRpbmc6NHB4IWltcG9ydGFudDsiIHR5cGU9ImJ1dHRvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ1bC1idG5fX2ljb24iPjxpIGNsYXNzPSJpLUFkZCI+PC9pPjwvc3Bhbj48L2J1dHRvbj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJlZ2lzdGVyUGFydG5lcnMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJyZWdpc3RlcmNvbnRhY3QiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdyZWdpc3Rlcl9jb250YWN0cycpIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnNob3dwYXJ0bmVycz0ic3RhdHV0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9ImNvbnRhY3RzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPSJyZWdpc3RlclBhcnRuZXJzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQHJlZ2lzdGVycGFydG5lcnM9InJlZ2lzdGVyQ3VzdG9tZXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvcmVnaXN0ZXJQYXJ0bmVycwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYi1yb3c+CiAgICAgICAgICAgICAgICAgICAgPC9iLWNvbD4KCiAgICAgICAgICAgICAgICAgICAgPGItY29sIG1kPSI2IiBzdHlsZT0icG9zaXRpb246cmVsYXRpdmU7dGV4dC1hbGlnbjogcmlnaHQ7bWFyZ2luLXRvcDogMTlweCIgPgoKICAgICAgICAgICAgICAgICAgICAgICAgPGItYnV0dG9uIHBpbGwgdmFyaWFudD0iZ3JleSBtLTEiIHN0eWxlPSJib3JkZXI6MXB4IHNvbGlkIGdyZXkgO2JvcmRlci1yYWRpdXM6IDNweDt2aXNpYmlsaXR5OiBoaWRkZW4iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImxhdW5jaEFjY291bnQoKSI+e3skdCgnTWlzX2VuX0NvbXB0ZScpfX08L2ItYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gcGlsbCB2YXJpYW50PSJkYW5nZXIgbS0xICIgQGNsaWNrPSJjbG9zZWNhaXNzZSgpIiA+e3skdCgnQW5udWxlcicpfX08L2ItYnV0dG9uPgoKCgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1tb2RhbCBpZD0iY29uZmlybWluQWNjb3VudCIgc2Nyb2xsYWJsZSBuby1jbG9zZS1vbi1iYWNrZHJvcCB0aXRsZT0iQ29uZmlybWVyIGxhIG1pc2UgZW4gQ29tcHRlIiBoaWRlLWZvb3Rlcj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gIHZhcmlhbnQ9Im91dGxpbmUtZGFuZ2VyIiAgc3R5bGU9InZpc2liaWxpdHk6IGhpZGRlbjttYXJnaW4tcmlnaHQ6IDEwcHgiPnt7JHQoJ0FubnVsZXInKX19PC9iLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gdHlwZT0ic3VibWl0IiB2YXJpYW50PSJvdXRsaW5lLXN1Y2Nlc3MgcmlnaHRzIiBAY2xpY2s9ImluQWNjb3VudCgpIiA+e3skdCgnRW5yZWdpc3RyZXInKX19PC9iLWJ1dHRvbj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9iLW1vZGFsPgoKICAgICAgICAgICAgICAgICAgICAgICAgPGItbW9kYWwgaWQ9ImNvbmZpcm1pbkJveCIgc2Nyb2xsYWJsZSBuby1jbG9zZS1vbi1iYWNrZHJvcCB0aXRsZT0iQ29uZmlybWVyIGwnRW5jYWlzc2VtZW50IiBoaWRlLWZvb3Rlcj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gIHZhcmlhbnQ9Im91dGxpbmUtZGFuZ2VyIiAgc3R5bGU9InZpc2liaWxpdHk6IGhpZGRlbjttYXJnaW4tcmlnaHQ6IDEwcHgiPnt7JHQoJ0FubnVsZXInKX19PC9iLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gdHlwZT0ic3VibWl0IiB2YXJpYW50PSJvdXRsaW5lLXN1Y2Nlc3MgcmlnaHRzIiBAY2xpY2s9ImluQm94KCkiID57eyR0KCdFbmNhaXNzZXInKX19PC9iLWJ1dHRvbj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9iLW1vZGFsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08Yi1idXR0b24gcGlsbCB2YXJpYW50PSJzdWNjZXNzIG0tMSIgdi1iLW1vZGFsLmNvbmZpcm1pbkJveCA+e3skdCgnRW5jYWlzc2VyJyl9fTwvYi1idXR0b24+LS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxiLWJ1dHRvbiBwaWxsIHZhcmlhbnQ9InN1Y2Nlc3MgbS0xIiBAY2xpY2s9ImxhdW5jaEJveCgpIiA+e3skdCgnRW5jYWlzc2VyJyl9fTwvYi1idXR0b24+CgogICAgICAgICAgICAgICAgICAgIDwvYi1jb2w+CgogICAgICAgICAgICAgICAgPC9iLXJvdz4KCiAgICAgICAgICAgICAgICA8Yi1yb3c+CiAgICAgICAgICAgICAgICAgICAgPGItY29sIG1kPSI2IiBzdHlsZT0icG9zaXRpb246cmVsYXRpdmU7dGV4dC1hbGlnbjogbGVmdCIgPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgcm93LWhvcml6b24iPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhvbGRMaXN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBsaXN0IEhvbGRzIGdvZXMgaGVyZSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJIb2xkICIgOmNsYXNzPSJbaXRlbS5ob2xkSWQgPT0gc2VsZWN0aG9sZC5ob2xkSWQgPyAnc2VsZWN0ZWRIb2xkJyA6ICcnXSIgaWQ9Iml0ZW0uaG9sZElkIiB2LWZvcj0iaXRlbSBpbiBob2xkbGlzdCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9Iml0ZW0uaG9sZF9pZCIgQGNsaWNrPSJTZWxlY3RIb2xkKGl0ZW0pIj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tpdGVtLm51bWJlcn19PCEtLTxzcGFuIGlkPSJUaW1lIj57e2l0ZW0udGltZX19PC9zcGFuPi0tPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IkhvbGQgcGwiIEBjbGljaz0iQWRkSG9sZCgpIj4rPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IkhvbGQgcGwiIEBjbGljaz0iUmVtb3ZlSG9sZCgpIj4tPC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08Yi10YWJzIHBpbGxzIGp1c3RpZmllZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi10YWIgOnRpdGxlPSJpdGVtLm51bWJlciIgdi1mb3I9Iml0ZW0gaW4gaG9sZGxpc3QiIDprZXk9Iml0ZW0uaG9sZF9pZCIgQGNsaWNrPSJTZWxlY3RIb2xkKGl0ZW0pIiBhY3RpdmU+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYi10YWI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9iLXRhYnM+LS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYi1jb2w+CiAgICAgICAgICAgICAgICA8L2Itcm93PgoKCiAgICAgICAgICAgIDwvYi1jYXJkPgogICAgICAgIDwvYi1vdmVybGF5PgoKICAgIDwvZGl2Pgo="},null]}