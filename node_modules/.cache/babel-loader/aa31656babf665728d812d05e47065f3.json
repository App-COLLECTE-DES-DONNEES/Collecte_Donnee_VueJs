{"remainingRequest":"C:\\wamp64\\www\\toolsmctc\\node_modules\\babel-loader\\lib\\index.js!C:\\wamp64\\www\\toolsmctc\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\wamp64\\www\\toolsmctc\\src\\plugins\\MaskedInput.js","dependencies":[{"path":"C:\\wamp64\\www\\toolsmctc\\src\\plugins\\MaskedInput.js","mtime":1604252827279},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/wamp64/www/toolsmctc/src/plugins/MaskedInput.js"],"names":["InputMask","ffpoly","name","render","h","ref","attrs","disabled","maskCore","domProps","value","on","keydown","keyDown","keypress","keyPress","keyup","keyUp","textInput","mouseup","mouseUp","focusout","focusOut","cut","copy","paste","data","marginLeft","updateAfterAll","props","type","String","mask","required","validator","length","Object","placeholderChar","default","Boolean","watch","newValue","oldValue","JSON","stringify","initMask","setValue","mounted","methods","pattern","formatCharacters","validate","char","test","transform","toUpperCase","$refs","input","reduce","memo","item","setSelection","start","end","$emit","updateToCoreState","e","getValue","preventDefault","setNativeSelection","keyCode","selection","backspace","selectionStart","selectionEnd","ctrlKey","isIE","document","documentMode","isFirefox","InstallTrigger","key","execCommand","err","text","clipboardData","getData","getRawValue","isEmpty","emptyValue"],"mappings":"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","sourcesContent":["import InputMask from 'inputmask-core';\r\nimport ffpoly from './ff-polyfill'; // Firefox Polyfill for focus events\r\n\r\nffpoly();\r\n\r\nexport default {\r\n    name: 'MaskedInput',\r\n    render(h) {\r\n        return h('input', {\r\n            ref: 'input',\r\n            attrs: {\r\n                disabled: this.maskCore === null || this.disabled,\r\n            },\r\n            domProps: {\r\n                value: this.value,\r\n            },\r\n            on: {\r\n                keydown: this.keyDown,\r\n                keypress: this.keyPress,\r\n                keyup: this.keyUp,\r\n                textInput: this.textInput,\r\n                mouseup: this.mouseUp,\r\n                focusout: this.focusOut,\r\n                cut: this.cut,\r\n                copy: this.copy,\r\n                paste: this.paste,\r\n            },\r\n        });\r\n    },\r\n\r\n    data: () => ({\r\n        marginLeft: 0,\r\n        maskCore: null,\r\n        updateAfterAll: false,\r\n    }),\r\n\r\n    props: {\r\n        value: {\r\n            type: String,\r\n        },\r\n        mask: {\r\n            required: true,\r\n            validator: value => !!((value && value.length >= 1) || value instanceof Object),\r\n        },\r\n        placeholderChar: {\r\n            type: String,\r\n            default: '_',\r\n            validator: value => !!(value && value.length === 1),\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        mask(newValue, oldValue) {\r\n            if (JSON.stringify(newValue) !== JSON.stringify(oldValue)) {\r\n                this.initMask();\r\n            }\r\n        },\r\n        value(newValue) {\r\n            if (this.maskCore) this.maskCore.setValue(newValue); // For multiple inputs support\r\n        },\r\n    },\r\n\r\n    mounted() {\r\n        this.initMask();\r\n    },\r\n\r\n    methods: {\r\n        initMask() {\r\n            try {\r\n                if (this.mask instanceof Object) {\r\n                    this.maskCore = new InputMask(this.mask);\r\n                } else {\r\n                    this.maskCore = new InputMask({\r\n                        pattern: this.mask,\r\n                        value: '',\r\n                        placeholderChar: this.placeholderChar,\r\n                        /* eslint-disable quote-props */\r\n                        formatCharacters: {\r\n                            'a': {\r\n                                validate: char => /^[A-Za-zА-Яа-я]$/.test(char),\r\n                            },\r\n                            'A': {\r\n                                validate: char => /^[A-Za-zА-Яа-я]$/.test(char),\r\n                                transform: char => char.toUpperCase(),\r\n                            },\r\n                            '*': {\r\n                                validate: char => /^[\\dA-Za-zА-Яа-я]$/.test(char),\r\n                            },\r\n                            '#': {\r\n                                validate: char => /^[\\dA-Za-zА-Яа-я]$/.test(char),\r\n                                transform: char => char.toUpperCase(),\r\n                            },\r\n                            '+': {\r\n                                validate: () => true,\r\n                            },\r\n                        },\r\n                        /* eslint-enable */\r\n                    });\r\n                }\r\n                [...this.$refs.input.value].reduce((memo, item) => this.maskCore.input(item), null);\r\n                this.maskCore.setSelection({\r\n                    start: 0,\r\n                    end: 0,\r\n                });\r\n                if (this.$refs.input.value === '') {\r\n                    this.$emit('input', '', '');\r\n                } else {\r\n                    this.updateToCoreState();\r\n                }\r\n            } catch (e) {\r\n                this.maskCore = null;\r\n                this.$refs.input.value = 'Error';\r\n                this.$emit('input', this.$refs.input.value, '');\r\n            }\r\n        },\r\n        getValue() {\r\n            return this.maskCore ? this.maskCore.getValue() : '';\r\n        },\r\n\r\n        keyDown(e) { // Always\r\n            if (this.maskCore === null) {\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            this.setNativeSelection();\r\n            switch (e.keyCode) {\r\n                // backspace\r\n                case 8:\r\n                    e.preventDefault();\r\n                    if (\r\n                        this.maskCore.selection.start > this.marginLeft ||\r\n                        this.maskCore.selection.start !== this.maskCore.selection.end\r\n                    ) {\r\n                        this.maskCore.backspace();\r\n                        this.updateToCoreState();\r\n                    }\r\n                    break;\r\n\r\n                // left arrow\r\n                case 37:\r\n                    e.preventDefault();\r\n                    if (this.$refs.input.selectionStart === this.$refs.input.selectionEnd) {\r\n                        // this.$refs.input.selectionEnd = this.$refs.input.selectionStart - 1; @TODO\r\n                        this.$refs.input.selectionStart -= 1;\r\n                    }\r\n                    this.maskCore.selection = {\r\n                        start: this.$refs.input.selectionStart,\r\n                        end: this.$refs.input.selectionStart,\r\n                    };\r\n                    this.updateToCoreState();\r\n                    break;\r\n\r\n                // right arrow\r\n                case 39:\r\n                    e.preventDefault();\r\n                    if (this.$refs.input.selectionStart === this.$refs.input.selectionEnd) {\r\n                        this.$refs.input.selectionEnd += 1;\r\n                    }\r\n                    this.maskCore.selection = {\r\n                        start: this.$refs.input.selectionEnd,\r\n                        end: this.$refs.input.selectionEnd,\r\n                    };\r\n                    this.updateToCoreState();\r\n                    break;\r\n\r\n                // end\r\n                case 35:\r\n                    e.preventDefault();\r\n                    this.$refs.input.selectionStart = this.$refs.input.value.length;\r\n                    this.$refs.input.selectionEnd = this.$refs.input.value.length;\r\n                    this.maskCore.selection = {\r\n                        start: this.$refs.input.selectionEnd,\r\n                        end: this.$refs.input.selectionEnd,\r\n                    };\r\n                    this.updateToCoreState();\r\n                    break;\r\n\r\n                // home\r\n                case 36:\r\n                    e.preventDefault();\r\n                    this.$refs.input.selectionStart = 0;\r\n                    this.$refs.input.selectionEnd = 0;\r\n                    this.maskCore.selection = {\r\n                        start: this.$refs.input.selectionStart,\r\n                        end: this.$refs.input.selectionStart,\r\n                    };\r\n                    this.updateToCoreState();\r\n                    break;\r\n\r\n                // delete\r\n                case 46:\r\n                    e.preventDefault();\r\n                    if (this.$refs.input.selectionStart === this.$refs.input.selectionEnd) {\r\n                        this.maskCore.setValue('');\r\n                        this.maskCore.setSelection({\r\n                            start: 0,\r\n                            end: 0,\r\n                        });\r\n                        this.$refs.input.selectionStart = this.maskCore.selection.start;\r\n                        this.$refs.input.selectionEnd = this.maskCore.selection.start;\r\n                    } else {\r\n                        this.maskCore.backspace();\r\n                    }\r\n                    this.updateToCoreState();\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        },\r\n\r\n        keyPress(e) { // works only on Desktop\r\n            if (e.ctrlKey) return; // Fix FF copy/paste issue\r\n            // IE & FF are not trigger textInput event, so we have to force it\r\n            /* eslint-disable */\r\n            const isIE = /*@cc_on!@*/false || !!document.documentMode; //by http://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\r\n            /* eslint-enable */\r\n            const isFirefox = typeof InstallTrigger !== 'undefined';\r\n            if (isIE || isFirefox) {\r\n                e.preventDefault();\r\n                e.data = e.key;\r\n                this.textInput(e);\r\n            }\r\n        },\r\n\r\n        textInput(e) {\r\n            if (e.preventDefault) e.preventDefault();\r\n            if (this.maskCore.input(e.data)) {\r\n                this.updateAfterAll = true;\r\n            }\r\n            this.updateToCoreState();\r\n        },\r\n\r\n        keyUp(e) {\r\n            if (e.keyCode === 9) { // Preven change selection for Tab in\r\n                return;\r\n            }\r\n            this.updateToCoreState();\r\n            this.updateAfterAll = false;\r\n        },\r\n\r\n\r\n        cut(e) {\r\n            e.preventDefault();\r\n            if (this.$refs.input.selectionStart !== this.$refs.input.selectionEnd) {\r\n                try {\r\n                    document.execCommand('copy');\r\n                } catch (err) {} // eslint-disable-line no-empty\r\n                this.maskCore.backspace();\r\n                this.updateToCoreState();\r\n            }\r\n        },\r\n\r\n        copy() {},\r\n\r\n        paste(e) {\r\n            e.preventDefault();\r\n            const text = e.clipboardData.getData('text');\r\n            [...text].reduce((memo, item) => this.maskCore.input(item), null);\r\n            this.updateToCoreState();\r\n        },\r\n\r\n        updateToCoreState() {\r\n            if (this.maskCore === null) {\r\n                return;\r\n            }\r\n            if (this.$refs.input.value !== this.maskCore.getValue()) {\r\n                this.$refs.input.value = this.maskCore.getValue();\r\n                this.$emit('input', this.$refs.input.value, this.maskCore.getRawValue());\r\n            }\r\n            this.$refs.input.selectionStart = this.maskCore.selection.start;\r\n            this.$refs.input.selectionEnd = this.maskCore.selection.end;\r\n        },\r\n\r\n        isEmpty() {\r\n            if (this.maskCore === null) return true;\r\n            return this.maskCore.getValue() === this.maskCore.emptyValue;\r\n        },\r\n\r\n        focusOut() {\r\n            if (this.isEmpty()) {\r\n                this.$refs.input.value = '';\r\n                this.maskCore.setSelection({\r\n                    start: 0,\r\n                    end: 0,\r\n                });\r\n                this.$emit('input', '', '');\r\n            }\r\n        },\r\n\r\n        setNativeSelection() {\r\n            this.maskCore.selection = {\r\n                start: this.$refs.input.selectionStart,\r\n                end: this.$refs.input.selectionEnd,\r\n            };\r\n        },\r\n\r\n        mouseUp() {\r\n            if (this.isEmpty() &&\r\n                this.$refs.input.selectionStart === this.$refs.input.selectionEnd) {\r\n                this.maskCore.setSelection({\r\n                    start: 0,\r\n                    end: 0,\r\n                });\r\n                this.$refs.input.selectionStart = this.maskCore.selection.start;\r\n                this.$refs.input.selectionEnd = this.maskCore.selection.start;\r\n                this.marginLeft = this.maskCore.selection.start;\r\n                this.updateToCoreState();\r\n            } else {\r\n                this.setNativeSelection();\r\n            }\r\n        },\r\n    },\r\n};"]}]}