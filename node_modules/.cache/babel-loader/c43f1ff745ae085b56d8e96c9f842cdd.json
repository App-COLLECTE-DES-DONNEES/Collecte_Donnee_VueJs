{"remainingRequest":"C:\\wamp64\\www\\toolsmctc\\node_modules\\babel-loader\\lib\\index.js!C:\\wamp64\\www\\toolsmctc\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\wamp64\\www\\toolsmctc\\src\\store\\modules\\caisses.js","dependencies":[{"path":"C:\\wamp64\\www\\toolsmctc\\src\\store\\modules\\caisses.js","mtime":1628681799408},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/wamp64/www/toolsmctc/src/store/modules/caisses.js"],"names":["axios","constants","state","clients","client","id","uid","name","prenom","phone","status","session_caisse_id","objethold","statusrequete","holdlist","selecthold","listproducts","productshold","montantopen","boxopens","caisseopen","resource_url","removeallproducts","checksession","bilan","userinfos","country","infomsg","actions","FetchCustomers","commit","get","then","products","console","log","data","catch","error","userinfo","removeCatProducts","registerCustom","JSON","parse","localStorage","getItem","idorganisation","organisationId","post","variant","customers","success","addhold","holds","getcountry","removehold","sessionCaisseId","close","$toasted","show","FetchSalesProducts","holdliste","SelectHolds","number","getProductsHold","addProductsHold","holdId","produitId","produit","reference","test","message","statut","removeAllProductsHold","removeProductsHold","closebox","ouvertureAmount","bilancaisse","caissierId","dateDebut","dateFin","checksessione","sub","setItem","openboxs","montantOuverture","dispatch","getters","getCustomers","getCustomer","getStatus","getObjetHold","getStatusHold","getHoldList","getSelectHold","GetProductsHold","MoveProductsHold","GetBoxOpen","GetCaisseOpen","GetRemoveAllProducts","GetCHECKSESSION","GETBILAN","GETUSERINFO","GETCOUNTRY","mutations","SETCUSTOMERS","SETCUSTOMER","SETSTATUS","SETNAMECLIENT","clientName","SETOBJETHOLD","SETSTATUSHOLD","SETHOLDLIST","SETSELECTHOLD","SETPRODUCTSHOLD","SETADDPRODUCTSHOLD","CLOSEBOX","val","CLOSEBILAN","OPENBOX","REMOVEALLPRODUCTSHOLD","CHECKSESSION","SETUSERINFO","SETCOUNTRY"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport constants from '../../plugins/constants'\r\n\r\n\r\nconst state = {\r\n    clients:[],\r\n    client:{id:1,uid:0,name:\"\",prenom:\"\",phone:\"\"},\r\n    status:false,\r\n    session_caisse_id:1,\r\n    objethold:{},\r\n    statusrequete:0,\r\n    holdlist:[],\r\n    selecthold:{},\r\n    listproducts:{},\r\n    productshold:{},\r\n    montantopen:0,\r\n    boxopens:false,\r\n    caisseopen:true,\r\n    resource_url: constants.resource_url,\r\n    removeallproducts:1,\r\n    checksession:false,\r\n    bilan:{},\r\n    userinfos:{},\r\n    country:{},\r\n    infomsg:{}\r\n\r\n};\r\n\r\nconst actions = {\r\n\r\n    async FetchCustomers({commit}){\r\n\r\n        axios.get(state.resource_url+'caisse/clients')\r\n            .then(products => {\r\n                console.log('clients',products.data.data);\r\n                commit(\"SETCUSTOMERS\",products.data.data)\r\n            })\r\n            .catch(function(error) {\r\n                console.log('products_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n\r\n            });\r\n\r\n    },\r\n\r\n    async userinfo({commit}){\r\n\r\n        axios.get(constants.resource_url + 'userconnected')\r\n            .then(products => {\r\n                console.log('clients',products);\r\n                commit(\"SETUSERINFO\", products)\r\n            })\r\n            .catch(function(error) {\r\n                console.log('products_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n\r\n            });\r\n\r\n    },\r\n\r\n    removeCatProducts({commit}, data) {\r\n        commit(\"REMOVE_CAT_PRODUCTS\", data);\r\n    },\r\n\r\n    async registerCustom({commit},data){\r\n\r\n        var userinfo = JSON.parse(localStorage.getItem('userinfo'))\r\n\r\n        data.idorganisation = userinfo.organisationId\r\n         axios.post(state.resource_url+data.variant,data)\r\n\r\n            .then(customers => {\r\n\r\n                console.log('variant',customers)\r\n\r\n                if(customers.data.success) {\r\n\r\n                    //objet client qui vient detre ajoute\r\n                    commit(\"SETCUSTOMER\", customers.data.data)\r\n                    commit(\"SETSTATUS\", true)\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                commit(\"SETSTATUS\", false)\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n                //commit(\"setError\", error);\r\n                // ...\r\n\r\n            });\r\n\r\n    },\r\n\r\n    async addhold({commit}){\r\n\r\n         axios.get(state.resource_url+\"caisse/newhold/\"+localStorage.getItem(\"sessioncaisse\"))\r\n\r\n            .then(holds => {\r\n                if(holds.data.success) {\r\n                    //objet client qui vient detre ajoute\r\n                    commit(\"SETOBJETHOLD\", holds.data.data)\r\n                }\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n    },\r\n    async getcountry({commit}){\r\n\r\n        axios.get(state.resource_url+\"organisation\")\r\n            .then(holds => {\r\n\r\n                if(holds.data.success) {\r\n                    //objet client qui vient detre ajoute\r\n                    commit(\"SETCOUNTRY\", holds.data.data)\r\n                    console.log('country',holds.data.data)\r\n                }\r\n\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n    },\r\n\r\n    async removehold({commit},data){\r\n\r\n        data.sessionCaisseId  = localStorage.getItem(\"sessioncaisse\")\r\n        axios.post(state.resource_url+\"caisse/deletehold\",data)\r\n\r\n            .then(holds => {\r\n\r\n                console.log('sucess',holds)\r\n\r\n                if(holds.data.success) {\r\n\r\n                    //objet client qui vient detre ajoute\r\n                    this.statusrequete = holds.data.status\r\n                    commit(\"SETSTATUSHOLD\", this.statusrequete)\r\n                    if(data.close){\r\n                        commit(\"REMOVEALLPRODUCTSHOLD\", 0)\r\n                    }\r\n\r\n                }\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n            `${this.$toasted.show('error','error')}`\r\n                //commit(\"setmakeToast\", )\r\n\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n    },\r\n\r\n    async FetchSalesProducts({commit},data){\r\n\r\n        console.log('variant',data)\r\n        axios.post(state.resource_url+\"caisse/posales\",data)\r\n\r\n            .then(holds => {\r\n                if(holds.data.success) {\r\n                    //objet client qui vient detre ajoute\r\n                    commit(\"SETSTATUSHOLD\", holds.data.success)\r\n                }\r\n\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n    },\r\n\r\n    async holdliste({commit}){\r\n\r\n        axios.get(state.resource_url+\"caisse/holdlist/\"+localStorage.getItem(\"sessioncaisse\"))\r\n            .then(holds => {\r\n\r\n                if(holds.data.success) {\r\n                    //objet client qui vient detre ajoute\r\n                    commit(\"SETHOLDLIST\", holds.data.data)\r\n                    console.log('holdliste',holds.data.data)\r\n                }\r\n\r\n                /*if(data.id==1){\r\n\r\n                    console.log('idlistproduct',data)\r\n                    //this.dispatch('getProductsHold',{number:(holds.data.data)[0]})\r\n\r\n                }*/\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n    },\r\n\r\n    async SelectHolds({commit},data){\r\n\r\n\r\n        axios.post(state.resource_url+\"caisse/selecthold\",\r\n            {number:data.number,\r\n                sessionCaisseId:localStorage.getItem(\"sessioncaisse\")})\r\n\r\n\r\n            .then(holds => {\r\n                if(holds.data.success) {\r\n\r\n                    //objet client qui vient detre ajoute\r\n                    commit(\"SETSELECTHOLD\", holds.data.data)\r\n\r\n                }\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n    },\r\n\r\n    async getProductsHold({commit},data){\r\n\r\n        axios.post(state.resource_url+\"caisse/posaleslist\",{number:data.number,sessionCaisseId:localStorage.getItem(\"sessioncaisse\")})\r\n\r\n            .then(holds => {\r\n                if(holds.data.success) {\r\n\r\n                    //objet client qui vient detre ajoute\r\n                    commit(\"SETPRODUCTSHOLD\", holds.data.data)\r\n\r\n                }\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n    },\r\n\r\n    async addProductsHold({commit},data){\r\n\r\n        axios.post(state.resource_url+\"caisse/posales\",\r\n              {\r\n                holdId:data.selecthold.holdId,\r\n                sessionCaisseId:localStorage.getItem(\"sessioncaisse\"),\r\n                produitId:data.produit.produitId,\r\n                status:1,\r\n                reference:data.reference})\r\n\r\n            .then(holds => {\r\n                let test={}\r\n                if(holds.data.success) {\r\n\r\n                    test = holds.data.data\r\n                    test.message = holds.data.message\r\n                    test.statut = 0\r\n                    test.success=true\r\n                    console.log('est',holds.data.message)\r\n                    //objet client qui vient detre ajoute\r\n\r\n\r\n                }else{\r\n                    test.message = holds.data.message\r\n                    test.statut = 0\r\n                    test.success=false\r\n                    console.log('estE',holds.data.message)\r\n                    //objet client qui vient detre ajoute\r\n\r\n                }\r\n                commit(\"SETADDPRODUCTSHOLD\", test)\r\n\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error.data);\r\n\r\n\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n    },\r\n\r\n    async removeAllProductsHold({commit},data){\r\n\r\n        //data.sessionCaisseId  = localStorage.getItem(\"sessioncaisse\")\r\n        axios.post(state.resource_url+\"caisse/hold/refresh\",data)\r\n\r\n            .then(holds => {\r\n                if(holds.data.success) {\r\n\r\n                    commit(\"REMOVEALLPRODUCTSHOLD\", 0)\r\n                    //objet client qui vient detre ajoute\r\n\r\n                }\r\n\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error.data);\r\n\r\n            });\r\n    },\r\n\r\n    async removeProductsHold({commit},data){\r\n\r\n        axios.post(state.resource_url+\"caisse/deleteposale\",\r\n              {\r\n                sessionCaisseId:localStorage.getItem(\"sessioncaisse\"),\r\n                reference:data.reference})\r\n\r\n            .then(holds => {\r\n                if(holds.data.success) {\r\n                    let test = {}\r\n                    console.log('sstatus',data)\r\n                    test = holds.data\r\n                    test.statut = 1\r\n                    test.reference = data.reference\r\n                    //holds.data.status = 1\r\n                    //objet client qui vient detre ajoute\r\n                    commit(\"SETADDPRODUCTSHOLD\", test)\r\n\r\n                }\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n    },\r\n\r\n    async closebox({commit},data){\r\n\r\n        axios.post(state.resource_url+\"caisse/fermerSessionCaisse\",\r\n            {\"sessionCaisseId\":localStorage.getItem(\"sessioncaisse\"),\r\n                \"montantFermeture\":data.ouvertureAmount})\r\n\r\n            .then(holds => {\r\n                console.log('statusc',holds)\r\n\r\n                if(holds.data.success) {\r\n\r\n                    //holds.data.status = 1\r\n                    //objet client qui vient detre ajoute\r\n                    commit(\"CLOSEBOX\", true)\r\n                    //commit(\"CLOSEBILAN\", holds.data)\r\n\r\n                }\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n\r\n    },\r\n\r\n    async bilancaisse({commit},data){\r\n\r\n        axios.post(state.resource_url+\"operationcaisse/recap\",\r\n            {\r\n                caissierId:1,\r\n                dateDebut:\"2020-10-10 09:09\",\r\n                dateFin:\"2021-01-20 09:09\"})\r\n\r\n            .then(holds => {\r\n                if(holds.data.success) {\r\n                    let test = {}\r\n                    console.log('sstatus',data)\r\n                    test = holds.data\r\n                    test.statut = 1\r\n                    test.reference = data.reference\r\n                    //holds.data.status = 1\r\n                    //objet client qui vient detre ajoute\r\n                    commit(\"SETADDPRODUCTSHOLD\", test)\r\n\r\n                }\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n\r\n            });\r\n\r\n    },\r\n\r\n    async checksessione({commit}){\r\n\r\n        var userinfo = JSON.parse(localStorage.getItem('userinfo'))\r\n\r\n        axios.get(state.resource_url+\"caisse/sessioncaisseexist/\"+userinfo.sub)\r\n\r\n            .then(holds => {\r\n\r\n                if(holds.data.success) {\r\n\r\n                    commit(\"CHECKSESSION\", holds.data.success)\r\n\r\n                    console.log('sel',holds.data.data.sessionCaisseId)\r\n\r\n                    localStorage.setItem(\"boxopen\",false)\r\n                    localStorage.setItem(\"boxshow\",false)\r\n\r\n\r\n                    if(holds.data.data!=null){\r\n                        localStorage.setItem(\"sessioncaisse\",holds.data.data.sessionCaisseId)\r\n                    }\r\n\r\n                    //this.holdliste({id:1})\r\n                    //this.dispatch('holdliste',{id:1})\r\n\r\n\r\n                }else{\r\n                    //this.holdliste({id:0})\r\n\r\n                    commit(\"CHECKSESSION\", holds.data.success)\r\n\r\n                    localStorage.setItem(\"boxopen\",true)\r\n                    localStorage.setItem(\"boxshow\",true)\r\n                }\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n\r\n    },\r\n\r\n    async openboxs({commit},data){\r\n\r\n        var userinfo = JSON.parse(localStorage.getItem('userinfo'))\r\n\r\n        axios.post(state.resource_url+\"caisse/ouverturecaisse\",{\r\n            \"montantOuverture\":data.ouvertureAmount,\r\n            \"userId\":userinfo.sub,\r\n        })\r\n\r\n            .then(holds => {\r\n\r\n                if(holds.data.success) {\r\n\r\n\r\n                    //stocker le hold id\r\n                    state.session_caisse_id = holds.data.data.sessionCaisseId\r\n                    //console.log('sessioncaisseid', state.session_caisse_id)\r\n                    state.montantopen = holds.data.data.montantOuverture\r\n                    console.log('sel1', holds.data.data.sessionCaisseId);\r\n\r\n                    localStorage.setItem(\"montantopen\",holds.data.data.montantOuverture)\r\n                    localStorage.setItem(\"sessioncaisse\",holds.data.data.sessionCaisseId)\r\n                    localStorage.setItem(\"boxopen\",false)\r\n                    this.dispatch('holdliste',{id:0})\r\n\r\n                    commit(\"OPENBOX\", false)\r\n\r\n\r\n                }\r\n            })\r\n\r\n            .catch(function(error) {\r\n                console.log('customer_create_error',error);\r\n                // Handle Errors here.\r\n                // var errorCode = error.code;\r\n                // var errorMessage = error.message;\r\n                // console.log(error);\r\n\r\n                //commit(\"setError\", error);\r\n                // ...\r\n            });\r\n\r\n    }\r\n\r\n};\r\n\r\nconst getters = {\r\n\r\n    getCustomers: state => state.clients,\r\n    getCustomer: state => state.client,\r\n    getStatus: state => state.status,\r\n    getObjetHold : state=>state.objethold,\r\n    getStatusHold : state=>state.statusrequete,\r\n    getHoldList : state => state.holdlist,\r\n    getSelectHold : state => state.selecthold,\r\n    GetProductsHold : state => state.listproducts,\r\n    MoveProductsHold : state => state.productshold,\r\n    GetBoxOpen : state => state.boxopens,\r\n    GetCaisseOpen : state => state.caisseopen,\r\n    GetRemoveAllProducts : state => state.removeallproducts,\r\n    GetCHECKSESSION : state => state.checksession,\r\n    GETBILAN : state => state.bilan,\r\n    GETUSERINFO : state => state.userinfos,\r\n    GETCOUNTRY : state => state.country\r\n\r\n\r\n}\r\n\r\nconst mutations = {\r\n    SETCUSTOMERS: (state,clients)=>state.clients=clients,\r\n    SETCUSTOMER: (state,client)=>state.client=client,\r\n    SETSTATUS: (state,status)=>state.status=status,\r\n    SETNAMECLIENT : (state,client)=>state.clientName=client,\r\n    SETOBJETHOLD : (state,objethold)=>state.objethold=objethold,\r\n    SETSTATUSHOLD : (state,statusrequete)=>state.statusrequete=statusrequete,\r\n    SETHOLDLIST : (state,holdlist)=>state.holdlist=holdlist,\r\n    SETSELECTHOLD : (state,selecthold)=>state.selecthold=selecthold,\r\n    SETPRODUCTSHOLD : (state,productshold)=>state.listproducts=productshold,\r\n    SETADDPRODUCTSHOLD : (state,productshold)=>state.productshold=productshold,\r\n    CLOSEBOX : (state,val)=>state.boxopens=val,\r\n    CLOSEBILAN : (state,val)=>state.bilan=val,\r\n    OPENBOX : (state,val)=>state.caisseopen=val,\r\n    REMOVEALLPRODUCTSHOLD : (state,val)=>state.removeallproducts=val,\r\n    CHECKSESSION : (state,val)=>state.checksession=val,\r\n    SETUSERINFO : (state,val)=>state.userinfos=val,\r\n    SETCOUNTRY : (state,val)=>state.country=val\r\n\r\n};\r\n\r\n\r\nexport default {\r\n    state,getters,actions,mutations\r\n}"]}]}