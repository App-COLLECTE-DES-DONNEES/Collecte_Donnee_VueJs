{"remainingRequest":"C:\\wamp64\\www\\toolsmctc\\node_modules\\babel-loader\\lib\\index.js!C:\\wamp64\\www\\toolsmctc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\toolsmctc\\src\\components\\webcam.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\wamp64\\www\\toolsmctc\\src\\components\\webcam.vue","mtime":1614085630461},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\toolsmctc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["webcam.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <video\r\n            ref=\"video\"\r\n            :width=\"width\"\r\n            :height=\"height\"\r\n            :src=\"source\"\r\n            :autoplay=\"autoplay\"\r\n            :playsinline=\"playsinline\"></video>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"VueWebCam\",\r\n        props: {\r\n            width: {\r\n                type: [Number, String],\r\n                default: \"100%\"\r\n            },\r\n            height: {\r\n                type: [Number, String],\r\n                default: 500\r\n            },\r\n            autoplay: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            screenshotFormat: {\r\n                type: String,\r\n                default: \"image/jpeg\"\r\n            },\r\n            selectFirstDevice: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            deviceId: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            playsinline: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            resolution: {\r\n                type: Object,\r\n                default: null,\r\n                validator: value => {\r\n                    return value.height && value.width;\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                source: null,\r\n                canvas: null,\r\n                camerasListEmitted: false,\r\n                cameras: []\r\n            };\r\n        },\r\n        watch: {\r\n            deviceId: function(id) {\r\n                this.changeCamera(id);\r\n            }\r\n        },\r\n        mounted() {\r\n            this.setupMedia();\r\n        },\r\n        beforeDestroy() {\r\n            this.stop();\r\n        },\r\n        methods: {\r\n            /**\r\n             * get user media\r\n             */\r\n            legacyGetUserMediaSupport() {\r\n                return constraints => {\r\n                    // First get ahold of the legacy getUserMedia, if present\r\n                    let getUserMedia =\r\n                        navigator.getUserMedia ||\r\n                        navigator.webkitGetUserMedia ||\r\n                        navigator.mozGetUserMedia ||\r\n                        navigator.msGetUserMedia ||\r\n                        navigator.oGetUserMedia;\r\n                    // Some browsers just don't implement it - return a rejected promise with an error\r\n                    // to keep a consistent interface\r\n                    if (!getUserMedia) {\r\n                        return Promise.reject(\r\n                            new Error(\"getUserMedia is not implemented in this browser\")\r\n                        );\r\n                    }\r\n                    // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\r\n                    return new Promise(function(resolve, reject) {\r\n                        getUserMedia.call(navigator, constraints, resolve, reject);\r\n                    });\r\n                };\r\n            },\r\n            /**\r\n             * setup media\r\n             */\r\n            setupMedia() {\r\n                if (navigator.mediaDevices === undefined) {\r\n                    navigator.mediaDevices = {};\r\n                }\r\n                if (navigator.mediaDevices.getUserMedia === undefined) {\r\n                    navigator.mediaDevices.getUserMedia = this.legacyGetUserMediaSupport();\r\n                }\r\n                this.testMediaAccess();\r\n            },\r\n            /**\r\n             * load available cameras\r\n             */\r\n            loadCameras() {\r\n                navigator.mediaDevices\r\n                    .enumerateDevices()\r\n                    .then(deviceInfos => {\r\n                        for (let i = 0; i !== deviceInfos.length; ++i) {\r\n                            let deviceInfo = deviceInfos[i];\r\n                            if (deviceInfo.kind === \"videoinput\") {\r\n                                this.cameras.push(deviceInfo);\r\n                            }\r\n                        }\r\n                    })\r\n                    .then(() => {\r\n                        if (!this.camerasListEmitted) {\r\n                            if (this.selectFirstDevice && this.cameras.length > 0) {\r\n                                this.deviceId = this.cameras[0].deviceId;\r\n                            }\r\n                            this.$emit(\"cameras\", this.cameras);\r\n                            this.camerasListEmitted = true;\r\n                        }\r\n                    })\r\n                    .catch(error => this.$emit(\"notsupported\", error));\r\n            },\r\n            /**\r\n             * change to a different camera stream, like front and back camera on phones\r\n             */\r\n            changeCamera(deviceId) {\r\n                this.stop();\r\n                this.$emit(\"camera-change\", deviceId);\r\n                this.loadCamera(deviceId);\r\n            },\r\n            /**\r\n             * load the stream to the\r\n             */\r\n            loadSrcStream(stream) {\r\n                if (\"srcObject\" in this.$refs.video) {\r\n                    // new browsers api\r\n                    this.$refs.video.srcObject = stream;\r\n                } else {\r\n                    // old broswers\r\n                    this.source = window.HTMLMediaElement.srcObject(stream);\r\n                }\r\n                // Emit video start/live event\r\n                this.$refs.video.onloadedmetadata = () => {\r\n                    this.$emit(\"video-live\", stream);\r\n                };\r\n                this.$emit(\"started\", stream);\r\n            },\r\n            /**\r\n             * stop the selected streamed video to change camera\r\n             */\r\n            stopStreamedVideo(videoElem) {\r\n                let stream = videoElem.srcObject;\r\n                let tracks = stream.getTracks();\r\n                tracks.forEach(track => {\r\n                    // stops the video track\r\n                    track.stop();\r\n                    this.$emit(\"stopped\", stream);\r\n                    this.$refs.video.srcObject = null;\r\n                    this.source = null;\r\n                });\r\n            },\r\n            // stop the video\r\n            stop() {\r\n                if (this.$refs.video !== null && this.$refs.video.srcObject) {\r\n                    this.stopStreamedVideo(this.$refs.video);\r\n                }\r\n            },\r\n            // start the video\r\n            start() {\r\n                if (this.deviceId) {\r\n                    this.loadCamera(this.deviceId);\r\n                }\r\n            },\r\n            // pause the video\r\n            pause() {\r\n                if (this.$refs.video !== null && this.$refs.video.srcObject) {\r\n                    this.$refs.video.pause();\r\n                }\r\n            },\r\n            // resume the video\r\n            resume() {\r\n                if (this.$refs.video !== null && this.$refs.video.srcObject) {\r\n                    this.$refs.video.play();\r\n                }\r\n            },\r\n            /**\r\n             * test access\r\n             */\r\n            testMediaAccess() {\r\n                let constraints = { video: true };\r\n                if (this.resolution) {\r\n                    constraints.video = {};\r\n                    constraints.video.height = this.resolution.height;\r\n                    constraints.video.width = this.resolution.width;\r\n                }\r\n                navigator.mediaDevices\r\n                    .getUserMedia(constraints)\r\n                    .then(stream => {\r\n                        //Make sure to stop this MediaStream\r\n                        let tracks = stream.getTracks();\r\n                        tracks.forEach(track => {\r\n                            track.stop();\r\n                        });\r\n                        this.loadCameras();\r\n                    })\r\n                    .catch(error => this.$emit(\"error\", error));\r\n            },\r\n            /**\r\n             * load the camera passed as index!\r\n             */\r\n            loadCamera(device) {\r\n                let constraints = { video: { deviceId: { exact: device } } };\r\n                if (this.resolution) {\r\n                    constraints.video.height = this.resolution.height;\r\n                    constraints.video.width = this.resolution.width;\r\n                }\r\n                navigator.mediaDevices\r\n                    .getUserMedia(constraints)\r\n                    .then(stream => this.loadSrcStream(stream))\r\n                    .catch(error => this.$emit(\"error\", error));\r\n            },\r\n            /**\r\n             * capture screenshot\r\n             */\r\n            capture() {\r\n                return this.getCanvas().toDataURL(this.screenshotFormat);\r\n            },\r\n            /**\r\n             * get canvas\r\n             */\r\n            getCanvas() {\r\n                let video = this.$refs.video;\r\n                if (!this.ctx) {\r\n                    let canvas = document.createElement(\"canvas\");\r\n                    canvas.height = video.videoHeight;\r\n                    canvas.width = video.videoWidth;\r\n                    this.canvas = canvas;\r\n                    this.ctx = canvas.getContext(\"2d\");\r\n                }\r\n                const { ctx, canvas } = this;\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                return canvas;\r\n            }\r\n        }\r\n    };\r\n</script>"],"sourceRoot":"src/components"}]}