{"remainingRequest":"C:\\Users\\WORLDNEWS\\Desktop\\CATIS COLLECTE\\collectedonnee\\collectedonnee\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\WORLDNEWS\\Desktop\\CATIS COLLECTE\\collectedonnee\\collectedonnee\\src\\views\\app\\accident\\pv.vue?vue&type=template&id=b9bc2024&","dependencies":[{"path":"C:\\Users\\WORLDNEWS\\Desktop\\CATIS COLLECTE\\collectedonnee\\collectedonnee\\src\\views\\app\\accident\\pv.vue","mtime":1664452484000},{"path":"C:\\Users\\WORLDNEWS\\Desktop\\CATIS COLLECTE\\collectedonnee\\collectedonnee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\WORLDNEWS\\Desktop\\CATIS COLLECTE\\collectedonnee\\collectedonnee\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\WORLDNEWS\\Desktop\\CATIS COLLECTE\\collectedonnee\\collectedonnee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\WORLDNEWS\\Desktop\\CATIS COLLECTE\\collectedonnee\\collectedonnee\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}