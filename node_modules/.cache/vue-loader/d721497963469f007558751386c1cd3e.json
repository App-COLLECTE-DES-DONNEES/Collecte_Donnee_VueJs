{"remainingRequest":"C:\\wamp64\\www\\collectedonnee\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\collectedonnee\\src\\containers\\layouts\\largeSidebar\\Sidebar.vue?vue&type=template&id=1bf99b28&scoped=true&","dependencies":[{"path":"C:\\wamp64\\www\\collectedonnee\\src\\containers\\layouts\\largeSidebar\\Sidebar.vue","mtime":1658926009040},{"path":"C:\\wamp64\\www\\collectedonnee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\collectedonnee\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\collectedonnee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\collectedonnee\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}